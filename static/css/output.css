/*! tailwindcss v4.0.14 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-200: oklch(0.885 0.062 18.334);
    --color-red-300: oklch(0.808 0.114 19.571);
    --color-red-500: oklch(0.637 0.237 25.331);
    --color-red-600: oklch(0.577 0.245 27.325);
    --color-green-600: oklch(0.627 0.194 149.214);
    --color-cyan-500: oklch(0.715 0.143 215.221);
    --color-blue-500: oklch(0.623 0.214 259.815);
    --color-blue-600: oklch(0.546 0.245 262.881);
    --color-blue-700: oklch(0.488 0.243 264.376);
    --color-blue-800: oklch(0.424 0.199 265.638);
    --color-indigo-600: oklch(0.511 0.262 276.966);
    --color-gray-50: oklch(0.985 0.002 247.839);
    --color-gray-100: oklch(0.967 0.003 264.542);
    --color-gray-200: oklch(0.928 0.006 264.531);
    --color-gray-300: oklch(0.872 0.01 258.338);
    --color-gray-400: oklch(0.707 0.022 261.325);
    --color-gray-500: oklch(0.551 0.027 264.364);
    --color-gray-600: oklch(0.446 0.03 256.802);
    --color-gray-700: oklch(0.373 0.034 259.733);
    --color-gray-800: oklch(0.278 0.033 256.848);
    --color-gray-900: oklch(0.21 0.034 264.665);
    --color-neutral-200: oklch(0.922 0 0);
    --color-neutral-300: oklch(0.87 0 0);
    --color-neutral-400: oklch(0.708 0 0);
    --color-neutral-500: oklch(0.556 0 0);
    --color-neutral-600: oklch(0.439 0 0);
    --color-neutral-700: oklch(0.371 0 0);
    --color-neutral-800: oklch(0.269 0 0);
    --color-neutral-900: oklch(0.205 0 0);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-md: 28rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-bounce: bounce 1s infinite;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(
      --font-sans--font-variation-settings
    );
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(
      --font-mono--font-feature-settings
    );
    --default-mono-font-variation-settings: var(
      --font-mono--font-variation-settings
    );
    --font-montserrat: "Montserrat", sans-serif;
    --font-lora: "Lora", sans-serif;
    --color-soft-beige: #EEE7DF;
    --color-deep-navy: #1C2938;
    --color-base-100: oklch(77.04% 0.039 72.49);
    --color-base-200: oklch(93.12% 0.0132 71.34);
    --color-base-300: #B9A89E;
    --color-base-content: oklch(96% 0.007 247.896);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var( --default-font-variation-settings, normal );
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace );
    font-feature-settings: var( --default-mono-font-feature-settings, normal );
    font-variation-settings: var( --default-mono-font-variation-settings, normal );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .\@container {
    container-type: inline-size;
  }
  .\@container-\[inline-size\] {
    container-type: inline-size;
  }
  .pointer-events-auto {
    pointer-events: auto;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .collapse {
    visibility: collapse;
  }
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .not-sr-only {
    position: static;
    width: auto;
    height: auto;
    padding: 0;
    margin: 0;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }
  .-start-8 {
    inset-inline-start: calc(var(--spacing) * -8);
  }
  .start-0 {
    inset-inline-start: calc(var(--spacing) * 0);
  }
  .start-2 {
    inset-inline-start: calc(var(--spacing) * 2);
  }
  .end-0 {
    inset-inline-end: calc(var(--spacing) * 0);
  }
  .end-2 {
    inset-inline-end: calc(var(--spacing) * 2);
  }
  .end-3 {
    inset-inline-end: calc(var(--spacing) * 3);
  }
  .-top-8 {
    top: calc(var(--spacing) * -8);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-2 {
    top: calc(var(--spacing) * 2);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-full {
    top: 100%;
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-3 {
    bottom: calc(var(--spacing) * 3);
  }
  .bottom-full {
    bottom: 100%;
  }
  .isolate {
    isolation: isolate;
  }
  .isolation-auto {
    isolation: auto;
  }
  .z-10 {
    z-index: 10;
  }
  .z-50 {
    z-index: 50;
  }
  .z-auto {
    z-index: auto;
  }
  .order-first {
    order: -9999;
  }
  .order-last {
    order: 9999;
  }
  .order-none {
    order: 0;
  }
  .col-auto {
    grid-column: auto;
  }
  .col-span-1 {
    grid-column: span 1 / span 1;
  }
  .col-span-3 {
    grid-column: span 3 / span 3;
  }
  .col-span-full {
    grid-column: 1 / -1;
  }
  .col-start-auto {
    grid-column-start: auto;
  }
  .col-end-auto {
    grid-column-end: auto;
  }
  .row-auto {
    grid-row: auto;
  }
  .row-span-full {
    grid-row: 1 / -1;
  }
  .row-start-auto {
    grid-row-start: auto;
  }
  .row-end-auto {
    grid-row-end: auto;
  }
  .float-end {
    float: inline-end;
  }
  .float-left {
    float: left;
  }
  .float-none {
    float: none;
  }
  .float-right {
    float: right;
  }
  .float-start {
    float: inline-start;
  }
  .clear-both {
    clear: both;
  }
  .clear-end {
    clear: inline-end;
  }
  .clear-left {
    clear: left;
  }
  .clear-none {
    clear: none;
  }
  .clear-right {
    clear: right;
  }
  .clear-start {
    clear: inline-start;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .container\! {
    width: 100% !important;
    @media (width >= 40rem) {
      max-width: 40rem !important;
    }
    @media (width >= 48rem) {
      max-width: 48rem !important;
    }
    @media (width >= 64rem) {
      max-width: 64rem !important;
    }
    @media (width >= 80rem) {
      max-width: 80rem !important;
    }
    @media (width >= 96rem) {
      max-width: 96rem !important;
    }
  }
  .mx-1\.5 {
    margin-inline: calc(var(--spacing) * 1.5);
  }
  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .\!ms-auto {
    margin-inline-start: auto !important;
  }
  .ms-0\.5 {
    margin-inline-start: calc(var(--spacing) * 0.5);
  }
  .ms-1 {
    margin-inline-start: calc(var(--spacing) * 1);
  }
  .ms-2 {
    margin-inline-start: calc(var(--spacing) * 2);
  }
  .ms-2\.5 {
    margin-inline-start: calc(var(--spacing) * 2.5);
  }
  .\!me-1\.5 {
    margin-inline-end: calc(var(--spacing) * 1.5) !important;
  }
  .me-2 {
    margin-inline-end: calc(var(--spacing) * 2);
  }
  .prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-lead);
      font-size: 1.25em;
      line-height: 1.6;
      margin-top: 1.2em;
      margin-bottom: 1.2em;
    }
    :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-links);
      text-decoration: underline;
      font-weight: 500;
    }
    :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-bold);
      font-weight: 600;
    }
    :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: disc;
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      font-weight: 400;
      color: var(--tw-prose-counters);
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      color: var(--tw-prose-bullets);
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      margin-top: 1.25em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-color: var(--tw-prose-hr);
      border-top-width: 1;
      margin-top: 3em;
      margin-bottom: 3em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 500;
      font-style: italic;
      color: var(--tw-prose-quotes);
      border-inline-start-width: 0.25rem;
      border-inline-start-color: var(--tw-prose-quote-borders);
      quotes: "\201C""\201D""\2018""\2019";
      margin-top: 1.6em;
      margin-bottom: 1.6em;
      padding-inline-start: 1em;
    }
    :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: open-quote;
    }
    :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: close-quote;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 800;
      font-size: 2.25em;
      margin-top: 0;
      margin-bottom: 0.8888889em;
      line-height: 1.1111111;
    }
    :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 900;
      color: inherit;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 700;
      font-size: 1.5em;
      margin-top: 2em;
      margin-bottom: 1em;
      line-height: 1.3333333;
    }
    :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 800;
      color: inherit;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      font-size: 1.25em;
      margin-top: 1.6em;
      margin-bottom: 0.6em;
      line-height: 1.6;
    }
    :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 700;
      color: inherit;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      margin-top: 1.5em;
      margin-bottom: 0.5em;
      line-height: 1.5;
    }
    :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 700;
      color: inherit;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      display: block;
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 500;
      font-family: inherit;
      color: var(--tw-prose-kbd);
      box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
      font-size: 0.875em;
      border-radius: 0.3125rem;
      padding-top: 0.1875em;
      padding-inline-end: 0.375em;
      padding-bottom: 0.1875em;
      padding-inline-start: 0.375em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-code);
      font-weight: 600;
      font-size: 0.875em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: "`";
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: "`";
    }
    :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
      font-size: 0.875em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
      font-size: 0.9em;
    }
    :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-pre-code);
      background-color: var(--tw-prose-pre-bg);
      overflow-x: auto;
      font-weight: 400;
      font-size: 0.875em;
      line-height: 1.7142857;
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
      border-radius: 0.375rem;
      padding-top: 0.8571429em;
      padding-inline-end: 1.1428571em;
      padding-bottom: 0.8571429em;
      padding-inline-start: 1.1428571em;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      background-color: transparent;
      border-width: 0;
      border-radius: 0;
      padding: 0;
      font-weight: inherit;
      color: inherit;
      font-size: inherit;
      font-family: inherit;
      line-height: inherit;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: none;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: none;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      width: 100%;
      table-layout: auto;
      margin-top: 2em;
      margin-bottom: 2em;
      font-size: 0.875em;
      line-height: 1.7142857;
    }
    :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-th-borders);
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      vertical-align: bottom;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-td-borders);
    }
    :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 0;
    }
    :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: baseline;
    }
    :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-top-width: 1px;
      border-top-color: var(--tw-prose-th-borders);
    }
    :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: top;
    }
    :where(th, td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      text-align: start;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-captions);
      font-size: 0.875em;
      line-height: 1.4285714;
      margin-top: 0.8571429em;
    }
    --tw-prose-body: oklch(0.373 0.034 259.733);
    --tw-prose-headings: oklch(0.21 0.034 264.665);
    --tw-prose-lead: oklch(0.446 0.03 256.802);
    --tw-prose-links: oklch(0.21 0.034 264.665);
    --tw-prose-bold: oklch(0.21 0.034 264.665);
    --tw-prose-counters: oklch(0.551 0.027 264.364);
    --tw-prose-bullets: oklch(0.872 0.01 258.338);
    --tw-prose-hr: oklch(0.928 0.006 264.531);
    --tw-prose-quotes: oklch(0.21 0.034 264.665);
    --tw-prose-quote-borders: oklch(0.928 0.006 264.531);
    --tw-prose-captions: oklch(0.551 0.027 264.364);
    --tw-prose-kbd: oklch(0.21 0.034 264.665);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.21 0.034 264.665);
    --tw-prose-pre-code: oklch(0.928 0.006 264.531);
    --tw-prose-pre-bg: oklch(0.278 0.033 256.848);
    --tw-prose-th-borders: oklch(0.872 0.01 258.338);
    --tw-prose-td-borders: oklch(0.928 0.006 264.531);
    --tw-prose-invert-body: oklch(0.872 0.01 258.338);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.707 0.022 261.325);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.707 0.022 261.325);
    --tw-prose-invert-bullets: oklch(0.446 0.03 256.802);
    --tw-prose-invert-hr: oklch(0.373 0.034 259.733);
    --tw-prose-invert-quotes: oklch(0.967 0.003 264.542);
    --tw-prose-invert-quote-borders: oklch(0.373 0.034 259.733);
    --tw-prose-invert-captions: oklch(0.707 0.022 261.325);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.872 0.01 258.338);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: oklch(0.446 0.03 256.802);
    --tw-prose-invert-td-borders: oklch(0.373 0.034 259.733);
    font-size: 1rem;
    line-height: 1.75;
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      margin-bottom: 0.5em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      padding-inline-start: 1.625em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.5714286em;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
  }
  .prose-2xl {
    font-size: 1.5rem;
    line-height: 1.6666667;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
      margin-bottom: 1.3333333em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.25em;
      line-height: 1.4666667;
      margin-top: 1.0666667em;
      margin-bottom: 1.0666667em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7777778em;
      margin-bottom: 1.7777778em;
      padding-inline-start: 1.1111111em;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 2.6666667em;
      margin-top: 0;
      margin-bottom: 0.875em;
      line-height: 1;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 2em;
      margin-top: 1.5em;
      margin-bottom: 0.8333333em;
      line-height: 1.0833333;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.5em;
      margin-top: 1.5555556em;
      margin-bottom: 0.6666667em;
      line-height: 1.2222222;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.6666667em;
      margin-bottom: 0.6666667em;
      line-height: 1.5;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8333333em;
      border-radius: 0.375rem;
      padding-top: 0.25em;
      padding-inline-end: 0.3333333em;
      padding-bottom: 0.25em;
      padding-inline-start: 0.3333333em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8333333em;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8888889em;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8333333em;
      line-height: 1.8;
      margin-top: 2em;
      margin-bottom: 2em;
      border-radius: 0.5rem;
      padding-top: 1.2em;
      padding-inline-end: 1.6em;
      padding-bottom: 1.2em;
      padding-inline-start: 1.6em;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
      margin-bottom: 1.3333333em;
      padding-inline-start: 1.5833333em;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
      margin-bottom: 1.3333333em;
      padding-inline-start: 1.5833333em;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      margin-bottom: 0.5em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.4166667em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.4166667em;
    }
    :where(.prose-2xl > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.8333333em;
      margin-bottom: 0.8333333em;
    }
    :where(.prose-2xl > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
    }
    :where(.prose-2xl > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.3333333em;
    }
    :where(.prose-2xl > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
    }
    :where(.prose-2xl > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.3333333em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.6666667em;
      margin-bottom: 0.6666667em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
      margin-bottom: 1.3333333em;
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      padding-inline-start: 1.5833333em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 3em;
      margin-bottom: 3em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8333333em;
      line-height: 1.4;
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0.6em;
      padding-bottom: 0.8em;
      padding-inline-start: 0.6em;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.8em;
      padding-inline-end: 0.6em;
      padding-bottom: 0.8em;
      padding-inline-start: 0.6em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8333333em;
      line-height: 1.6;
      margin-top: 1em;
    }
    :where(.prose-2xl > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose-2xl > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
  }
  .prose-base {
    font-size: 1rem;
    line-height: 1.75;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.25em;
      line-height: 1.6;
      margin-top: 1.2em;
      margin-bottom: 1.2em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.6em;
      margin-bottom: 1.6em;
      padding-inline-start: 1em;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 2.25em;
      margin-top: 0;
      margin-bottom: 0.8888889em;
      line-height: 1.1111111;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.5em;
      margin-top: 2em;
      margin-bottom: 1em;
      line-height: 1.3333333;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.25em;
      margin-top: 1.6em;
      margin-bottom: 0.6em;
      line-height: 1.6;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.5em;
      margin-bottom: 0.5em;
      line-height: 1.5;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875em;
      border-radius: 0.3125rem;
      padding-top: 0.1875em;
      padding-inline-end: 0.375em;
      padding-bottom: 0.1875em;
      padding-inline-start: 0.375em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875em;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875em;
      line-height: 1.7142857;
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
      border-radius: 0.375rem;
      padding-top: 0.8571429em;
      padding-inline-end: 1.1428571em;
      padding-bottom: 0.8571429em;
      padding-inline-start: 1.1428571em;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      margin-bottom: 0.5em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(.prose-base > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(.prose-base > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose-base > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(.prose-base > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose-base > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      padding-inline-start: 1.625em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 3em;
      margin-bottom: 3em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875em;
      line-height: 1.7142857;
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.5714286em;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875em;
      line-height: 1.4285714;
      margin-top: 0.8571429em;
    }
    :where(.prose-base > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose-base > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
  }
  .prose-lg {
    font-size: 1.125rem;
    line-height: 1.7777778;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
      margin-bottom: 1.3333333em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.2222222em;
      line-height: 1.4545455;
      margin-top: 1.0909091em;
      margin-bottom: 1.0909091em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.6666667em;
      margin-bottom: 1.6666667em;
      padding-inline-start: 1em;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 2.6666667em;
      margin-top: 0;
      margin-bottom: 0.8333333em;
      line-height: 1;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.6666667em;
      margin-top: 1.8666667em;
      margin-bottom: 1.0666667em;
      line-height: 1.3333333;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.3333333em;
      margin-top: 1.6666667em;
      margin-bottom: 0.6666667em;
      line-height: 1.5;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7777778em;
      margin-bottom: 0.4444444em;
      line-height: 1.5555556;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7777778em;
      margin-bottom: 1.7777778em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7777778em;
      margin-bottom: 1.7777778em;
    }
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7777778em;
      margin-bottom: 1.7777778em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8888889em;
      border-radius: 0.3125rem;
      padding-top: 0.2222222em;
      padding-inline-end: 0.4444444em;
      padding-bottom: 0.2222222em;
      padding-inline-start: 0.4444444em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8888889em;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8666667em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.875em;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8888889em;
      line-height: 1.75;
      margin-top: 2em;
      margin-bottom: 2em;
      border-radius: 0.375rem;
      padding-top: 1em;
      padding-inline-end: 1.5em;
      padding-bottom: 1em;
      padding-inline-start: 1.5em;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
      margin-bottom: 1.3333333em;
      padding-inline-start: 1.5555556em;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
      margin-bottom: 1.3333333em;
      padding-inline-start: 1.5555556em;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.6666667em;
      margin-bottom: 0.6666667em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.4444444em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.4444444em;
    }
    :where(.prose-lg > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.8888889em;
      margin-bottom: 0.8888889em;
    }
    :where(.prose-lg > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
    }
    :where(.prose-lg > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.3333333em;
    }
    :where(.prose-lg > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
    }
    :where(.prose-lg > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.3333333em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.8888889em;
      margin-bottom: 0.8888889em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
      margin-bottom: 1.3333333em;
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.6666667em;
      padding-inline-start: 1.5555556em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 3.1111111em;
      margin-bottom: 3.1111111em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8888889em;
      line-height: 1.5;
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0.75em;
      padding-bottom: 0.75em;
      padding-inline-start: 0.75em;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.75em;
      padding-inline-end: 0.75em;
      padding-bottom: 0.75em;
      padding-inline-start: 0.75em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7777778em;
      margin-bottom: 1.7777778em;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8888889em;
      line-height: 1.5;
      margin-top: 1em;
    }
    :where(.prose-lg > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose-lg > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
  }
  .prose-sm {
    font-size: 0.875rem;
    line-height: 1.7142857;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.1428571em;
      margin-bottom: 1.1428571em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.2857143em;
      line-height: 1.5555556;
      margin-top: 0.8888889em;
      margin-bottom: 0.8888889em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.3333333em;
      margin-bottom: 1.3333333em;
      padding-inline-start: 1.1111111em;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 2.1428571em;
      margin-top: 0;
      margin-bottom: 0.8em;
      line-height: 1.2;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.4285714em;
      margin-top: 1.6em;
      margin-bottom: 0.8em;
      line-height: 1.4;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.2857143em;
      margin-top: 1.5555556em;
      margin-bottom: 0.4444444em;
      line-height: 1.5555556;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.4285714em;
      margin-bottom: 0.5714286em;
      line-height: 1.4285714;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
    }
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8571429em;
      border-radius: 0.3125rem;
      padding-top: 0.1428571em;
      padding-inline-end: 0.3571429em;
      padding-bottom: 0.1428571em;
      padding-inline-start: 0.3571429em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8571429em;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8888889em;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8571429em;
      line-height: 1.6666667;
      margin-top: 1.6666667em;
      margin-bottom: 1.6666667em;
      border-radius: 0.25rem;
      padding-top: 0.6666667em;
      padding-inline-end: 1em;
      padding-bottom: 0.6666667em;
      padding-inline-start: 1em;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.1428571em;
      margin-bottom: 1.1428571em;
      padding-inline-start: 1.5714286em;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.1428571em;
      margin-bottom: 1.1428571em;
      padding-inline-start: 1.5714286em;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.2857143em;
      margin-bottom: 0.2857143em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.4285714em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.4285714em;
    }
    :where(.prose-sm > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5714286em;
      margin-bottom: 0.5714286em;
    }
    :where(.prose-sm > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.1428571em;
    }
    :where(.prose-sm > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.1428571em;
    }
    :where(.prose-sm > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.1428571em;
    }
    :where(.prose-sm > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.1428571em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5714286em;
      margin-bottom: 0.5714286em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.1428571em;
      margin-bottom: 1.1428571em;
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.1428571em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.2857143em;
      padding-inline-start: 1.5714286em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2.8571429em;
      margin-bottom: 2.8571429em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8571429em;
      line-height: 1.5;
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 1em;
      padding-bottom: 0.6666667em;
      padding-inline-start: 1em;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.6666667em;
      padding-inline-end: 1em;
      padding-bottom: 0.6666667em;
      padding-inline-start: 1em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8571429em;
      line-height: 1.3333333;
      margin-top: 0.6666667em;
    }
    :where(.prose-sm > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose-sm > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
  }
  .prose-xl {
    font-size: 1.25rem;
    line-height: 1.8;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.2em;
      margin-bottom: 1.2em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.2em;
      line-height: 1.5;
      margin-top: 1em;
      margin-bottom: 1em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.6em;
      margin-bottom: 1.6em;
      padding-inline-start: 1.0666667em;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 2.8em;
      margin-top: 0;
      margin-bottom: 0.8571429em;
      line-height: 1;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.8em;
      margin-top: 1.5555556em;
      margin-bottom: 0.8888889em;
      line-height: 1.1111111;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 1.5em;
      margin-top: 1.6em;
      margin-bottom: 0.6666667em;
      line-height: 1.3333333;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.8em;
      margin-bottom: 0.6em;
      line-height: 1.6;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
      border-radius: 0.3125rem;
      padding-top: 0.25em;
      padding-inline-end: 0.4em;
      padding-bottom: 0.25em;
      padding-inline-start: 0.4em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.8611111em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
      line-height: 1.7777778;
      margin-top: 2em;
      margin-bottom: 2em;
      border-radius: 0.5rem;
      padding-top: 1.1111111em;
      padding-inline-end: 1.3333333em;
      padding-bottom: 1.1111111em;
      padding-inline-start: 1.3333333em;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.2em;
      margin-bottom: 1.2em;
      padding-inline-start: 1.6em;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.2em;
      margin-bottom: 1.2em;
      padding-inline-start: 1.6em;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.6em;
      margin-bottom: 0.6em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.4em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.4em;
    }
    :where(.prose-xl > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.8em;
      margin-bottom: 0.8em;
    }
    :where(.prose-xl > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.2em;
    }
    :where(.prose-xl > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.2em;
    }
    :where(.prose-xl > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.2em;
    }
    :where(.prose-xl > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.2em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.8em;
      margin-bottom: 0.8em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.2em;
      margin-bottom: 1.2em;
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.2em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.6em;
      padding-inline-start: 1.6em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2.8em;
      margin-bottom: 2.8em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
      line-height: 1.5555556;
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0.6666667em;
      padding-bottom: 0.8888889em;
      padding-inline-start: 0.6666667em;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.8888889em;
      padding-inline-end: 0.6666667em;
      padding-bottom: 0.8888889em;
      padding-inline-start: 0.6666667em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-size: 0.9em;
      line-height: 1.5555556;
      margin-top: 1em;
    }
    :where(.prose-xl > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose-xl > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-7 {
    margin-top: calc(var(--spacing) * 7);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .mt-20 {
    margin-top: calc(var(--spacing) * 20);
  }
  .mt-auto {
    margin-top: auto;
  }
  .mb-0\.5 {
    margin-bottom: calc(var(--spacing) * 0.5);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .box-border {
    box-sizing: border-box;
  }
  .box-content {
    box-sizing: content-box;
  }
  .line-clamp-none {
    overflow: visible;
    display: block;
    -webkit-box-orient: horizontal;
    -webkit-line-clamp: unset;
  }
  .\!flex {
    display: flex !important;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .flow-root {
    display: flow-root;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .inline-grid {
    display: inline-grid;
  }
  .inline-table {
    display: inline-table;
  }
  .list-item {
    display: list-item;
  }
  .table {
    display: table;
  }
  .table-caption {
    display: table-caption;
  }
  .table-cell {
    display: table-cell;
  }
  .table-column {
    display: table-column;
  }
  .table-column-group {
    display: table-column-group;
  }
  .table-footer-group {
    display: table-footer-group;
  }
  .table-header-group {
    display: table-header-group;
  }
  .table-row {
    display: table-row;
  }
  .table-row-group {
    display: table-row-group;
  }
  .field-sizing-content {
    field-sizing: content;
  }
  .field-sizing-fixed {
    field-sizing: fixed;
  }
  .aspect-auto {
    aspect-ratio: auto;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .size-2\.5 {
    width: calc(var(--spacing) * 2.5);
    height: calc(var(--spacing) * 2.5);
  }
  .size-3 {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }
  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }
  .size-11 {
    width: calc(var(--spacing) * 11);
    height: calc(var(--spacing) * 11);
  }
  .size-12 {
    width: calc(var(--spacing) * 12);
    height: calc(var(--spacing) * 12);
  }
  .size-14 {
    width: calc(var(--spacing) * 14);
    height: calc(var(--spacing) * 14);
  }
  .size-16 {
    width: calc(var(--spacing) * 16);
    height: calc(var(--spacing) * 16);
  }
  .size-18 {
    width: calc(var(--spacing) * 18);
    height: calc(var(--spacing) * 18);
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .\!h-2\.5 {
    height: calc(var(--spacing) * 2.5) !important;
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-80 {
    height: calc(var(--spacing) * 80);
  }
  .h-87\.5 {
    height: calc(var(--spacing) * 87.5);
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .max-h-60 {
    max-height: calc(var(--spacing) * 60);
  }
  .max-h-72 {
    max-height: calc(var(--spacing) * 72);
  }
  .max-h-none {
    max-height: none;
  }
  .max-h-screen {
    max-height: 100vh;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .\!w-2\.5 {
    width: calc(var(--spacing) * 2.5) !important;
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-\[calc\(100\%-2rem\)\] {
    width: calc(100% - 2rem);
  }
  .w-\[calc\(100\%-32px\)\] {
    width: calc(100% - 32px);
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-3xl {
    max-width: var(--container-3xl);
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-75 {
    max-width: calc(var(--spacing) * 75);
  }
  .max-w-\[300px\] {
    max-width: 300px;
  }
  .max-w-full {
    max-width: 100%;
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-none {
    max-width: none;
  }
  .max-w-screen {
    max-width: 100vw;
  }
  .min-w-24 {
    min-width: calc(var(--spacing) * 24);
  }
  .min-w-screen {
    min-width: 100vw;
  }
  .flex-auto {
    flex: auto;
  }
  .flex-initial {
    flex: 0 auto;
  }
  .flex-none {
    flex: none;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .flex-shrink-0 {
    flex-shrink: 0;
  }
  .shrink {
    flex-shrink: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .basis-auto {
    flex-basis: auto;
  }
  .basis-full {
    flex-basis: 100%;
  }
  .table-auto {
    table-layout: auto;
  }
  .table-fixed {
    table-layout: fixed;
  }
  .caption-bottom {
    caption-side: bottom;
  }
  .caption-top {
    caption-side: top;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .border-separate {
    border-collapse: separate;
  }
  .origin-bottom {
    transform-origin: bottom;
  }
  .origin-bottom-left {
    transform-origin: bottom left;
  }
  .origin-bottom-right {
    transform-origin: bottom right;
  }
  .origin-center {
    transform-origin: center;
  }
  .origin-left {
    transform-origin: left;
  }
  .origin-right {
    transform-origin: right;
  }
  .origin-top {
    transform-origin: top;
  }
  .origin-top-left {
    transform-origin: top left;
  }
  .origin-top-right {
    transform-origin: top right;
  }
  .-translate-full {
    --tw-translate-x: -100%;
    --tw-translate-y: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-full {
    --tw-translate-x: 100%;
    --tw-translate-y: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-10 {
    --tw-translate-y: calc(var(--spacing) * 10);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-3d {
    translate: var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z);
  }
  .translate-none {
    translate: none;
  }
  .scale-3d {
    scale: var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z);
  }
  .scale-none {
    scale: none;
  }
  .rotate-none {
    rotate: none;
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .transform-cpu {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .transform-gpu {
    transform: translateZ(0) var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .transform-none {
    transform: none;
  }
  .animate-bounce {
    animation: var(--animate-bounce);
  }
  .animate-none {
    animation: none;
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .touch-pinch-zoom {
    --tw-pinch-zoom: pinch-zoom;
    touch-action: var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,);
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .resize-x {
    resize: horizontal;
  }
  .resize-y {
    resize: vertical;
  }
  .snap-none {
    scroll-snap-type: none;
  }
  .snap-mandatory {
    --tw-scroll-snap-strictness: mandatory;
  }
  .snap-proximity {
    --tw-scroll-snap-strictness: proximity;
  }
  .snap-align-none {
    scroll-snap-align: none;
  }
  .snap-center {
    scroll-snap-align: center;
  }
  .snap-end {
    scroll-snap-align: end;
  }
  .snap-start {
    scroll-snap-align: start;
  }
  .snap-always {
    scroll-snap-stop: always;
  }
  .snap-normal {
    scroll-snap-stop: normal;
  }
  .list-inside {
    list-style-position: inside;
  }
  .list-outside {
    list-style-position: outside;
  }
  .list-decimal {
    list-style-type: decimal;
  }
  .list-disc {
    list-style-type: disc;
  }
  .list-none {
    list-style-type: none;
  }
  .list-image-none {
    list-style-image: none;
  }
  .appearance-auto {
    appearance: auto;
  }
  .appearance-none {
    appearance: none;
  }
  .columns-auto {
    columns: auto;
  }
  .auto-cols-auto {
    grid-auto-columns: auto;
  }
  .auto-cols-fr {
    grid-auto-columns: minmax(0, 1fr);
  }
  .auto-cols-max {
    grid-auto-columns: max-content;
  }
  .auto-cols-min {
    grid-auto-columns: min-content;
  }
  .grid-flow-col {
    grid-auto-flow: column;
  }
  .grid-flow-col-dense {
    grid-auto-flow: column dense;
  }
  .grid-flow-dense {
    grid-auto-flow: dense;
  }
  .grid-flow-row {
    grid-auto-flow: row;
  }
  .grid-flow-row-dense {
    grid-auto-flow: row dense;
  }
  .auto-rows-auto {
    grid-auto-rows: auto;
  }
  .auto-rows-fr {
    grid-auto-rows: minmax(0, 1fr);
  }
  .auto-rows-max {
    grid-auto-rows: max-content;
  }
  .auto-rows-min {
    grid-auto-rows: min-content;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }
  .grid-cols-none {
    grid-template-columns: none;
  }
  .grid-cols-subgrid {
    grid-template-columns: subgrid;
  }
  .grid-rows-none {
    grid-template-rows: none;
  }
  .grid-rows-subgrid {
    grid-template-rows: subgrid;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .flex-nowrap {
    flex-wrap: nowrap;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .flex-wrap-reverse {
    flex-wrap: wrap-reverse;
  }
  .place-content-around {
    place-content: space-around;
  }
  .place-content-baseline {
    place-content: baseline;
  }
  .place-content-between {
    place-content: space-between;
  }
  .place-content-center {
    place-content: center;
  }
  .place-content-end {
    place-content: end;
  }
  .place-content-evenly {
    place-content: space-evenly;
  }
  .place-content-start {
    place-content: start;
  }
  .place-content-stretch {
    place-content: stretch;
  }
  .place-items-baseline {
    place-items: baseline;
  }
  .place-items-center {
    place-items: center;
  }
  .place-items-end {
    place-items: end;
  }
  .place-items-start {
    place-items: start;
  }
  .place-items-stretch {
    place-items: stretch;
  }
  .content-around {
    align-content: space-around;
  }
  .content-baseline {
    align-content: baseline;
  }
  .content-between {
    align-content: space-between;
  }
  .content-center {
    align-content: center;
  }
  .content-end {
    align-content: flex-end;
  }
  .content-evenly {
    align-content: space-evenly;
  }
  .content-normal {
    align-content: normal;
  }
  .content-start {
    align-content: flex-start;
  }
  .content-stretch {
    align-content: stretch;
  }
  .items-baseline {
    align-items: baseline;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .items-stretch {
    align-items: stretch;
  }
  .\!justify-between {
    justify-content: space-between !important;
  }
  .justify-around {
    justify-content: space-around;
  }
  .justify-baseline {
    justify-content: baseline;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-evenly {
    justify-content: space-evenly;
  }
  .justify-normal {
    justify-content: normal;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .justify-stretch {
    justify-content: stretch;
  }
  .justify-items-center {
    justify-items: center;
  }
  .justify-items-end {
    justify-items: end;
  }
  .justify-items-normal {
    justify-items: normal;
  }
  .justify-items-start {
    justify-items: start;
  }
  .justify-items-stretch {
    justify-items: stretch;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  .space-y-0\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0.5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0.5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-reverse {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 1;
    }
  }
  .gap-x-1 {
    column-gap: calc(var(--spacing) * 1);
  }
  .gap-x-1\.5 {
    column-gap: calc(var(--spacing) * 1.5);
  }
  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }
  .gap-x-3 {
    column-gap: calc(var(--spacing) * 3);
  }
  .gap-x-5 {
    column-gap: calc(var(--spacing) * 5);
  }
  .gap-x-7 {
    column-gap: calc(var(--spacing) * 7);
  }
  .space-x-2 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-reverse {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 1;
    }
  }
  .divide-x {
    :where(& > :not(:last-child)) {
      --tw-divide-x-reverse: 0;
      border-inline-style: var(--tw-border-style);
      border-inline-start-width: calc(1px * var(--tw-divide-x-reverse));
      border-inline-end-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
    }
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-y-reverse {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 1;
    }
  }
  .divide-gray-300 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-gray-300);
    }
  }
  .divide-gray-400 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-gray-400);
    }
  }
  .place-self-auto {
    place-self: auto;
  }
  .place-self-center {
    place-self: center;
  }
  .place-self-end {
    place-self: end;
  }
  .place-self-start {
    place-self: start;
  }
  .place-self-stretch {
    place-self: stretch;
  }
  .self-auto {
    align-self: auto;
  }
  .self-baseline {
    align-self: baseline;
  }
  .self-center {
    align-self: center;
  }
  .self-end {
    align-self: flex-end;
  }
  .self-start {
    align-self: flex-start;
  }
  .self-stretch {
    align-self: stretch;
  }
  .justify-self-auto {
    justify-self: auto;
  }
  .justify-self-center {
    justify-self: center;
  }
  .justify-self-end {
    justify-self: flex-end;
  }
  .justify-self-start {
    justify-self: flex-start;
  }
  .justify-self-stretch {
    justify-self: stretch;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .scroll-auto {
    scroll-behavior: auto;
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .\!rounded-sm {
    border-radius: var(--radius-sm) !important;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-s {
    border-start-start-radius: 0.25rem;
    border-end-start-radius: 0.25rem;
  }
  .rounded-ss {
    border-start-start-radius: 0.25rem;
  }
  .rounded-e {
    border-start-end-radius: 0.25rem;
    border-end-end-radius: 0.25rem;
  }
  .rounded-se {
    border-start-end-radius: 0.25rem;
  }
  .rounded-ee {
    border-end-end-radius: 0.25rem;
  }
  .rounded-es {
    border-end-start-radius: 0.25rem;
  }
  .rounded-t {
    border-top-left-radius: 0.25rem;
    border-top-right-radius: 0.25rem;
  }
  .rounded-t-lg {
    border-top-left-radius: var(--radius-lg);
    border-top-right-radius: var(--radius-lg);
  }
  .rounded-t-xl {
    border-top-left-radius: var(--radius-xl);
    border-top-right-radius: var(--radius-xl);
  }
  .rounded-l {
    border-top-left-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
  }
  .rounded-tl {
    border-top-left-radius: 0.25rem;
  }
  .rounded-tl-3xl {
    border-top-left-radius: var(--radius-3xl);
  }
  .rounded-r {
    border-top-right-radius: 0.25rem;
    border-bottom-right-radius: 0.25rem;
  }
  .rounded-tr {
    border-top-right-radius: 0.25rem;
  }
  .rounded-tr-3xl {
    border-top-right-radius: var(--radius-3xl);
  }
  .rounded-b {
    border-bottom-right-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
  }
  .rounded-br {
    border-bottom-right-radius: 0.25rem;
  }
  .rounded-br-3xl {
    border-bottom-right-radius: var(--radius-3xl);
  }
  .rounded-bl {
    border-bottom-left-radius: 0.25rem;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-3 {
    border-style: var(--tw-border-style);
    border-width: 3px;
  }
  .border-\[3px\] {
    border-style: var(--tw-border-style);
    border-width: 3px;
  }
  .border-x {
    border-inline-style: var(--tw-border-style);
    border-inline-width: 1px;
  }
  .border-y {
    border-block-style: var(--tw-border-style);
    border-block-width: 1px;
  }
  .border-s {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 1px;
  }
  .border-s-2 {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 2px;
  }
  .border-e {
    border-inline-end-style: var(--tw-border-style);
    border-inline-end-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-t-2 {
    border-top-style: var(--tw-border-style);
    border-top-width: 2px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-b-3 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 3px;
  }
  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .border-dotted {
    --tw-border-style: dotted;
    border-style: dotted;
  }
  .border-double {
    --tw-border-style: double;
    border-style: double;
  }
  .border-hidden {
    --tw-border-style: hidden;
    border-style: hidden;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .\!border-gray-200 {
    border-color: var(--color-gray-200) !important;
  }
  .border-base-300 {
    border-color: var(--color-base-300);
  }
  .border-base-content\/20 {
    border-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
  }
  .border-base-content\/40 {
    border-color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
  }
  .border-current {
    border-color: currentColor;
  }
  .border-gray-100 {
    border-color: var(--color-gray-100);
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-gray-800 {
    border-color: var(--color-gray-800);
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-white {
    border-color: var(--color-white);
  }
  .border-t-transparent {
    border-top-color: transparent;
  }
  .\!bg-white {
    background-color: var(--color-white) !important;
  }
  .bg-\(--my_variable\) {
    background-color: var(--my_variable);
  }
  .bg-\(color\:--my-color\) {
    background-color: var(--my-color);
  }
  .bg-\[\#0088cc\] {
    background-color: #0088cc;
  }
  .bg-\[\#EEE7DF\] {
    background-color: #EEE7DF;
  }
  .bg-\[color\:var\(--my-color\)\] {
    background-color: var(--my-color);
  }
  .bg-\[rgba\(255\,255\,255\,0\.5\)\] {
    background-color: rgba(255,255,255,0.5);
  }
  .bg-\[var\(--my_variable\)\] {
    background-color: var(--my_variable);
  }
  .bg-base-100 {
    background-color: var(--color-base-100);
  }
  .bg-base-200 {
    background-color: var(--color-base-200);
  }
  .bg-black\/20 {
    background-color: color-mix(in oklab, var(--color-black) 20%, transparent);
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-cyan-500 {
    background-color: var(--color-cyan-500);
  }
  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-gray-900 {
    background-color: var(--color-gray-900);
  }
  .bg-gray-900\/50 {
    background-color: color-mix(in oklab, var(--color-gray-900) 50%, transparent);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-red-500\/50 {
    background-color: color-mix(in oklab, var(--color-red-500) 50%, transparent);
  }
  .bg-red-500\/\[50\%\] {
    background-color: color-mix(in oklab, var(--color-red-500) 50%, transparent);
  }
  .bg-soft-beige {
    background-color: var(--color-soft-beige);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/40 {
    background-color: color-mix(in oklab, var(--color-white) 40%, transparent);
  }
  .-bg-conic {
    --tw-gradient-position: in oklab;
    background-image: conic-gradient(var(--tw-gradient-stops));
  }
  .bg-conic {
    --tw-gradient-position: in oklab;
    background-image: conic-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-radial {
    --tw-gradient-position: in oklab;
    background-image: radial-gradient(var(--tw-gradient-stops));
  }
  .bg-none {
    background-image: none;
  }
  .via-none {
    --tw-gradient-via-stops: initial;
  }
  .from-transparent {
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-\[\#EEE7DF\]\/30 {
    --tw-gradient-via: color-mix(in oklab, #EEE7DF 30%, transparent);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-\[\#EEE7DF\] {
    --tw-gradient-to: #EEE7DF;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .box-decoration-clone {
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;
  }
  .box-decoration-slice {
    -webkit-box-decoration-break: slice;
    box-decoration-break: slice;
  }
  .decoration-clone {
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;
  }
  .decoration-slice {
    -webkit-box-decoration-break: slice;
    box-decoration-break: slice;
  }
  .bg-auto {
    background-size: auto;
  }
  .bg-contain {
    background-size: contain;
  }
  .bg-cover {
    background-size: cover;
  }
  .bg-fixed {
    background-attachment: fixed;
  }
  .bg-local {
    background-attachment: local;
  }
  .bg-scroll {
    background-attachment: scroll;
  }
  .bg-clip-border {
    background-clip: border-box;
  }
  .bg-clip-content {
    background-clip: content-box;
  }
  .bg-clip-padding {
    background-clip: padding-box;
  }
  .bg-clip-text {
    background-clip: text;
  }
  .bg-bottom {
    background-position: bottom;
  }
  .bg-center {
    background-position: center;
  }
  .bg-left {
    background-position: left;
  }
  .bg-left-bottom {
    background-position: left bottom;
  }
  .bg-left-top {
    background-position: left top;
  }
  .bg-right {
    background-position: right;
  }
  .bg-right-bottom {
    background-position: right bottom;
  }
  .bg-right-top {
    background-position: right top;
  }
  .bg-top {
    background-position: top;
  }
  .bg-no-repeat {
    background-repeat: no-repeat;
  }
  .bg-repeat {
    background-repeat: repeat;
  }
  .bg-repeat-round {
    background-repeat: round;
  }
  .bg-repeat-space {
    background-repeat: space;
  }
  .bg-repeat-x {
    background-repeat: repeat-x;
  }
  .bg-repeat-y {
    background-repeat: repeat-y;
  }
  .bg-origin-border {
    background-origin: border-box;
  }
  .bg-origin-content {
    background-origin: content-box;
  }
  .bg-origin-padding {
    background-origin: padding-box;
  }
  .fill-black {
    fill: var(--color-black);
  }
  .fill-none {
    fill: none;
  }
  .stroke-none {
    stroke: none;
  }
  .object-contain {
    object-fit: contain;
  }
  .object-cover {
    object-fit: cover;
  }
  .object-fill {
    object-fit: fill;
  }
  .object-none {
    object-fit: none;
  }
  .object-scale-down {
    object-fit: scale-down;
  }
  .object-bottom {
    object-position: bottom;
  }
  .object-center {
    object-position: center;
  }
  .object-left {
    object-position: left;
  }
  .object-left-bottom {
    object-position: left bottom;
  }
  .object-left-top {
    object-position: left top;
  }
  .object-right {
    object-position: right;
  }
  .object-right-bottom {
    object-position: right bottom;
  }
  .object-right-top {
    object-position: right top;
  }
  .object-top {
    object-position: top;
  }
  .p-0\.5 {
    padding: calc(var(--spacing) * 0.5);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .\!py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5) !important;
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }
  .ps-4 {
    padding-inline-start: calc(var(--spacing) * 4);
  }
  .pe-6 {
    padding-inline-end: calc(var(--spacing) * 6);
  }
  .pe-9 {
    padding-inline-end: calc(var(--spacing) * 9);
  }
  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pt-14 {
    padding-top: calc(var(--spacing) * 14);
  }
  .pt-22 {
    padding-top: calc(var(--spacing) * 22);
  }
  .pt-26 {
    padding-top: calc(var(--spacing) * 26);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }
  .pb-12 {
    padding-bottom: calc(var(--spacing) * 12);
  }
  .text-center {
    text-align: center;
  }
  .text-end {
    text-align: end;
  }
  .text-justify {
    text-align: justify;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .text-start {
    text-align: start;
  }
  .align-baseline {
    vertical-align: baseline;
  }
  .align-bottom {
    vertical-align: bottom;
  }
  .align-middle {
    vertical-align: middle;
  }
  .align-sub {
    vertical-align: sub;
  }
  .align-super {
    vertical-align: super;
  }
  .align-text-bottom {
    vertical-align: text-bottom;
  }
  .align-text-top {
    vertical-align: text-top;
  }
  .align-top {
    vertical-align: top;
  }
  .font-lora {
    font-family: var(--font-lora);
  }
  .font-montserrat {
    font-family: var(--font-montserrat);
  }
  .\!text-sm {
    font-size: var(--text-sm) !important;
    line-height: var(--tw-leading, var(--text-sm--line-height)) !important;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[10px\] {
    font-size: 10px;
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .\!font-medium {
    --tw-font-weight: var(--font-weight-medium) !important;
    font-weight: var(--font-weight-medium) !important;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-balance {
    text-wrap: balance;
  }
  .text-nowrap {
    text-wrap: nowrap;
  }
  .text-pretty {
    text-wrap: pretty;
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .break-normal {
    overflow-wrap: normal;
    word-break: normal;
  }
  .break-words {
    overflow-wrap: break-word;
  }
  .break-all {
    word-break: break-all;
  }
  .break-keep {
    word-break: keep-all;
  }
  .overflow-ellipsis {
    text-overflow: ellipsis;
  }
  .text-clip {
    text-overflow: clip;
  }
  .text-ellipsis {
    text-overflow: ellipsis;
  }
  .hyphens-auto {
    -webkit-hyphens: auto;
    hyphens: auto;
  }
  .hyphens-manual {
    -webkit-hyphens: manual;
    hyphens: manual;
  }
  .hyphens-none {
    -webkit-hyphens: none;
    hyphens: none;
  }
  .whitespace-break-spaces {
    white-space: break-spaces;
  }
  .whitespace-normal {
    white-space: normal;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .whitespace-pre {
    white-space: pre;
  }
  .whitespace-pre-line {
    white-space: pre-line;
  }
  .whitespace-pre-wrap {
    white-space: pre-wrap;
  }
  .\[color\:red\] {
    color: red;
  }
  .\[color\:red\]\/50 {
    color: color-mix(in oklab, red 50%, transparent);
  }
  .\[color\:red\]\/50\! {
    color: color-mix(in oklab, red 50%, transparent) !important;
  }
  .text-base-content {
    color: var(--color-base-content);
  }
  .text-base-content\/50 {
    color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
  }
  .text-base-content\/80 {
    color: color-mix(in oklab, var(--color-base-content) 80%, transparent);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-deep-navy {
    color: var(--color-deep-navy);
  }
  .text-gray-200 {
    color: var(--color-gray-200);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-neutral-200 {
    color: var(--color-neutral-200);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\/80 {
    color: color-mix(in oklab, var(--color-white) 80%, transparent);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .lowercase {
    text-transform: lowercase;
  }
  .normal-case {
    text-transform: none;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .not-italic {
    font-style: normal;
  }
  .font-stretch-condensed {
    font-stretch: condensed;
  }
  .font-stretch-expanded {
    font-stretch: expanded;
  }
  .font-stretch-extra-condensed {
    font-stretch: extra-condensed;
  }
  .font-stretch-extra-expanded {
    font-stretch: extra-expanded;
  }
  .font-stretch-normal {
    font-stretch: normal;
  }
  .font-stretch-semi-condensed {
    font-stretch: semi-condensed;
  }
  .font-stretch-semi-expanded {
    font-stretch: semi-expanded;
  }
  .font-stretch-ultra-condensed {
    font-stretch: ultra-condensed;
  }
  .font-stretch-ultra-expanded {
    font-stretch: ultra-expanded;
  }
  .diagonal-fractions {
    --tw-numeric-fraction: diagonal-fractions;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .lining-nums {
    --tw-numeric-figure: lining-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .oldstyle-nums {
    --tw-numeric-figure: oldstyle-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .ordinal {
    --tw-ordinal: ordinal;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .proportional-nums {
    --tw-numeric-spacing: proportional-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .slashed-zero {
    --tw-slashed-zero: slashed-zero;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .stacked-fractions {
    --tw-numeric-fraction: stacked-fractions;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .tabular-nums {
    --tw-numeric-spacing: tabular-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,);
  }
  .normal-nums {
    font-variant-numeric: normal;
  }
  .line-through {
    text-decoration-line: line-through;
  }
  .no-underline {
    text-decoration-line: none;
  }
  .overline {
    text-decoration-line: overline;
  }
  .underline {
    text-decoration-line: underline;
  }
  .decoration-dashed {
    text-decoration-style: dashed;
  }
  .decoration-dotted {
    text-decoration-style: dotted;
  }
  .decoration-double {
    text-decoration-style: double;
  }
  .decoration-solid {
    text-decoration-style: solid;
  }
  .decoration-wavy {
    text-decoration-style: wavy;
  }
  .decoration-auto {
    text-decoration-thickness: auto;
  }
  .decoration-from-font {
    text-decoration-thickness: from-font;
  }
  .underline-offset-auto {
    text-underline-offset: auto;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .subpixel-antialiased {
    -webkit-font-smoothing: auto;
    -moz-osx-font-smoothing: auto;
  }
  .accent-auto {
    accent-color: auto;
  }
  .scheme-dark {
    color-scheme: dark;
  }
  .scheme-light {
    color-scheme: light;
  }
  .scheme-light-dark {
    color-scheme: light dark;
  }
  .scheme-normal {
    color-scheme: normal;
  }
  .scheme-only-dark {
    color-scheme: only dark;
  }
  .scheme-only-light {
    color-scheme: only light;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .mix-blend-plus-darker {
    mix-blend-mode: plus-darker;
  }
  .mix-blend-plus-lighter {
    mix-blend-mode: plus-lighter;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-2xs {
    --tw-shadow: 0 1px var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-8 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(8px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .inset-ring {
    --tw-inset-ring-shadow: inset 0 0 0 1px var(--tw-inset-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-initial {
    --tw-shadow-color: initial;
  }
  .ring-black\/5 {
    --tw-ring-color: color-mix(in oklab, var(--color-black) 5%, transparent);
  }
  .ring-black\/10 {
    --tw-ring-color: color-mix(in oklab, var(--color-black) 10%, transparent);
  }
  .ring-black\/15 {
    --tw-ring-color: color-mix(in oklab, var(--color-black) 15%, transparent);
  }
  .ring-neutral-800\/50 {
    --tw-ring-color: color-mix(in oklab, var(--color-neutral-800) 50%, transparent);
  }
  .inset-shadow-initial {
    --tw-inset-shadow-color: initial;
  }
  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
    @media (forced-colors: active) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-none {
    --tw-blur:  ;
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .brightness-60 {
    --tw-brightness: brightness(60%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .drop-shadow {
    --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow( 0 1px 1px rgb(0 0 0 / 0.06));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .drop-shadow-none {
    --tw-drop-shadow:  ;
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .sepia {
    --tw-sepia: sepia(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur {
    --tw-backdrop-blur: blur(8px);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-none {
    --tw-backdrop-blur:  ;
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-grayscale {
    --tw-backdrop-grayscale: grayscale(100%);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-invert {
    --tw-backdrop-invert: invert(100%);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-sepia {
    --tw-backdrop-sepia: sepia(100%);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[height\] {
    transition-property: height;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-none {
    transition-property: none;
  }
  .transition-discrete {
    transition-behavior: allow-discrete;
  }
  .transition-normal {
    transition-behavior: normal;
  }
  .delay-\[100ms\] {
    transition-delay: 100ms;
  }
  .delay-\[200ms\] {
    transition-delay: 200ms;
  }
  .delay-\[300ms\] {
    transition-delay: 300ms;
  }
  .delay-\[400ms\] {
    transition-delay: 400ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-700 {
    --tw-duration: 700ms;
    transition-duration: 700ms;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-linear {
    --tw-ease: linear;
    transition-timing-function: linear;
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .will-change-auto {
    will-change: auto;
  }
  .will-change-contents {
    will-change: contents;
  }
  .will-change-scroll {
    will-change: scroll-position;
  }
  .will-change-transform {
    will-change: transform;
  }
  .contain-inline-size {
    --tw-contain-size: inline-size;
    contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);
  }
  .contain-layout {
    --tw-contain-layout: layout;
    contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);
  }
  .contain-paint {
    --tw-contain-paint: paint;
    contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);
  }
  .contain-size {
    --tw-contain-size: size;
    contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);
  }
  .contain-style {
    --tw-contain-style: style;
    contain: var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,);
  }
  .contain-content {
    contain: content;
  }
  .contain-none {
    contain: none;
  }
  .contain-strict {
    contain: strict;
  }
  .content-none {
    --tw-content: none;
    content: none;
  }
  .forced-color-adjust-auto {
    forced-color-adjust: auto;
  }
  .forced-color-adjust-none {
    forced-color-adjust: none;
  }
  .prose-gray {
    --tw-prose-body: oklch(0.373 0.034 259.733);
    --tw-prose-headings: oklch(0.21 0.034 264.665);
    --tw-prose-lead: oklch(0.446 0.03 256.802);
    --tw-prose-links: oklch(0.21 0.034 264.665);
    --tw-prose-bold: oklch(0.21 0.034 264.665);
    --tw-prose-counters: oklch(0.551 0.027 264.364);
    --tw-prose-bullets: oklch(0.872 0.01 258.338);
    --tw-prose-hr: oklch(0.928 0.006 264.531);
    --tw-prose-quotes: oklch(0.21 0.034 264.665);
    --tw-prose-quote-borders: oklch(0.928 0.006 264.531);
    --tw-prose-captions: oklch(0.551 0.027 264.364);
    --tw-prose-kbd: oklch(0.21 0.034 264.665);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.21 0.034 264.665);
    --tw-prose-pre-code: oklch(0.928 0.006 264.531);
    --tw-prose-pre-bg: oklch(0.278 0.033 256.848);
    --tw-prose-th-borders: oklch(0.872 0.01 258.338);
    --tw-prose-td-borders: oklch(0.928 0.006 264.531);
    --tw-prose-invert-body: oklch(0.872 0.01 258.338);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.707 0.022 261.325);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.707 0.022 261.325);
    --tw-prose-invert-bullets: oklch(0.446 0.03 256.802);
    --tw-prose-invert-hr: oklch(0.373 0.034 259.733);
    --tw-prose-invert-quotes: oklch(0.967 0.003 264.542);
    --tw-prose-invert-quote-borders: oklch(0.373 0.034 259.733);
    --tw-prose-invert-captions: oklch(0.707 0.022 261.325);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.872 0.01 258.338);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: oklch(0.446 0.03 256.802);
    --tw-prose-invert-td-borders: oklch(0.373 0.034 259.733);
  }
  .prose-neutral {
    --tw-prose-body: oklch(0.371 0 0);
    --tw-prose-headings: oklch(0.205 0 0);
    --tw-prose-lead: oklch(0.439 0 0);
    --tw-prose-links: oklch(0.205 0 0);
    --tw-prose-bold: oklch(0.205 0 0);
    --tw-prose-counters: oklch(0.556 0 0);
    --tw-prose-bullets: oklch(0.87 0 0);
    --tw-prose-hr: oklch(0.922 0 0);
    --tw-prose-quotes: oklch(0.205 0 0);
    --tw-prose-quote-borders: oklch(0.922 0 0);
    --tw-prose-captions: oklch(0.556 0 0);
    --tw-prose-kbd: oklch(0.205 0 0);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.205 0 0);
    --tw-prose-pre-code: oklch(0.922 0 0);
    --tw-prose-pre-bg: oklch(0.269 0 0);
    --tw-prose-th-borders: oklch(0.87 0 0);
    --tw-prose-td-borders: oklch(0.922 0 0);
    --tw-prose-invert-body: oklch(0.87 0 0);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.708 0 0);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.708 0 0);
    --tw-prose-invert-bullets: oklch(0.439 0 0);
    --tw-prose-invert-hr: oklch(0.371 0 0);
    --tw-prose-invert-quotes: oklch(0.97 0 0);
    --tw-prose-invert-quote-borders: oklch(0.371 0 0);
    --tw-prose-invert-captions: oklch(0.708 0 0);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.87 0 0);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: oklch(0.439 0 0);
    --tw-prose-invert-td-borders: oklch(0.371 0 0);
  }
  .prose-slate {
    --tw-prose-body: oklch(0.372 0.044 257.287);
    --tw-prose-headings: oklch(0.208 0.042 265.755);
    --tw-prose-lead: oklch(0.446 0.043 257.281);
    --tw-prose-links: oklch(0.208 0.042 265.755);
    --tw-prose-bold: oklch(0.208 0.042 265.755);
    --tw-prose-counters: oklch(0.554 0.046 257.417);
    --tw-prose-bullets: oklch(0.869 0.022 252.894);
    --tw-prose-hr: oklch(0.929 0.013 255.508);
    --tw-prose-quotes: oklch(0.208 0.042 265.755);
    --tw-prose-quote-borders: oklch(0.929 0.013 255.508);
    --tw-prose-captions: oklch(0.554 0.046 257.417);
    --tw-prose-kbd: oklch(0.208 0.042 265.755);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.208 0.042 265.755);
    --tw-prose-pre-code: oklch(0.929 0.013 255.508);
    --tw-prose-pre-bg: oklch(0.279 0.041 260.031);
    --tw-prose-th-borders: oklch(0.869 0.022 252.894);
    --tw-prose-td-borders: oklch(0.929 0.013 255.508);
    --tw-prose-invert-body: oklch(0.869 0.022 252.894);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.704 0.04 256.788);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.704 0.04 256.788);
    --tw-prose-invert-bullets: oklch(0.446 0.043 257.281);
    --tw-prose-invert-hr: oklch(0.372 0.044 257.287);
    --tw-prose-invert-quotes: oklch(0.968 0.007 247.896);
    --tw-prose-invert-quote-borders: oklch(0.372 0.044 257.287);
    --tw-prose-invert-captions: oklch(0.704 0.04 256.788);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.869 0.022 252.894);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: oklch(0.446 0.043 257.281);
    --tw-prose-invert-td-borders: oklch(0.372 0.044 257.287);
  }
  .prose-stone {
    --tw-prose-body: oklch(0.374 0.01 67.558);
    --tw-prose-headings: oklch(0.216 0.006 56.043);
    --tw-prose-lead: oklch(0.444 0.011 73.639);
    --tw-prose-links: oklch(0.216 0.006 56.043);
    --tw-prose-bold: oklch(0.216 0.006 56.043);
    --tw-prose-counters: oklch(0.553 0.013 58.071);
    --tw-prose-bullets: oklch(0.869 0.005 56.366);
    --tw-prose-hr: oklch(0.923 0.003 48.717);
    --tw-prose-quotes: oklch(0.216 0.006 56.043);
    --tw-prose-quote-borders: oklch(0.923 0.003 48.717);
    --tw-prose-captions: oklch(0.553 0.013 58.071);
    --tw-prose-kbd: oklch(0.216 0.006 56.043);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.216 0.006 56.043);
    --tw-prose-pre-code: oklch(0.923 0.003 48.717);
    --tw-prose-pre-bg: oklch(0.268 0.007 34.298);
    --tw-prose-th-borders: oklch(0.869 0.005 56.366);
    --tw-prose-td-borders: oklch(0.923 0.003 48.717);
    --tw-prose-invert-body: oklch(0.869 0.005 56.366);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.709 0.01 56.259);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.709 0.01 56.259);
    --tw-prose-invert-bullets: oklch(0.444 0.011 73.639);
    --tw-prose-invert-hr: oklch(0.374 0.01 67.558);
    --tw-prose-invert-quotes: oklch(0.97 0.001 106.424);
    --tw-prose-invert-quote-borders: oklch(0.374 0.01 67.558);
    --tw-prose-invert-captions: oklch(0.709 0.01 56.259);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.869 0.005 56.366);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: oklch(0.444 0.011 73.639);
    --tw-prose-invert-td-borders: oklch(0.374 0.01 67.558);
  }
  .prose-zinc {
    --tw-prose-body: oklch(0.37 0.013 285.805);
    --tw-prose-headings: oklch(0.21 0.006 285.885);
    --tw-prose-lead: oklch(0.442 0.017 285.786);
    --tw-prose-links: oklch(0.21 0.006 285.885);
    --tw-prose-bold: oklch(0.21 0.006 285.885);
    --tw-prose-counters: oklch(0.552 0.016 285.938);
    --tw-prose-bullets: oklch(0.871 0.006 286.286);
    --tw-prose-hr: oklch(0.92 0.004 286.32);
    --tw-prose-quotes: oklch(0.21 0.006 285.885);
    --tw-prose-quote-borders: oklch(0.92 0.004 286.32);
    --tw-prose-captions: oklch(0.552 0.016 285.938);
    --tw-prose-kbd: oklch(0.21 0.006 285.885);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.21 0.006 285.885);
    --tw-prose-pre-code: oklch(0.92 0.004 286.32);
    --tw-prose-pre-bg: oklch(0.274 0.006 286.033);
    --tw-prose-th-borders: oklch(0.871 0.006 286.286);
    --tw-prose-td-borders: oklch(0.92 0.004 286.32);
    --tw-prose-invert-body: oklch(0.871 0.006 286.286);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.705 0.015 286.067);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.705 0.015 286.067);
    --tw-prose-invert-bullets: oklch(0.442 0.017 285.786);
    --tw-prose-invert-hr: oklch(0.37 0.013 285.805);
    --tw-prose-invert-quotes: oklch(0.967 0.001 286.375);
    --tw-prose-invert-quote-borders: oklch(0.37 0.013 285.805);
    --tw-prose-invert-captions: oklch(0.705 0.015 286.067);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.871 0.006 286.286);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: oklch(0.442 0.017 285.786);
    --tw-prose-invert-td-borders: oklch(0.37 0.013 285.805);
  }
  .prose-invert {
    --tw-prose-body: var(--tw-prose-invert-body);
    --tw-prose-headings: var(--tw-prose-invert-headings);
    --tw-prose-lead: var(--tw-prose-invert-lead);
    --tw-prose-links: var(--tw-prose-invert-links);
    --tw-prose-bold: var(--tw-prose-invert-bold);
    --tw-prose-counters: var(--tw-prose-invert-counters);
    --tw-prose-bullets: var(--tw-prose-invert-bullets);
    --tw-prose-hr: var(--tw-prose-invert-hr);
    --tw-prose-quotes: var(--tw-prose-invert-quotes);
    --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
    --tw-prose-captions: var(--tw-prose-invert-captions);
    --tw-prose-kbd: var(--tw-prose-invert-kbd);
    --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
    --tw-prose-code: var(--tw-prose-invert-code);
    --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
    --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
    --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
    --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
  }
  .outline-dashed {
    --tw-outline-style: dashed;
    outline-style: dashed;
  }
  .outline-dotted {
    --tw-outline-style: dotted;
    outline-style: dotted;
  }
  .outline-double {
    --tw-outline-style: double;
    outline-style: double;
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .outline-solid {
    --tw-outline-style: solid;
    outline-style: solid;
  }
  .\[--placement\:bottom\] {
    --placement: bottom;
  }
  .\[--trigger\:hover\] {
    --trigger: hover;
  }
  .backface-hidden {
    backface-visibility: hidden;
  }
  .backface-visible {
    backface-visibility: visible;
  }
  .divide-x-reverse {
    :where(& > :not(:last-child)) {
      --tw-divide-x-reverse: 1;
    }
  }
  .duration-initial {
    --tw-duration: initial;
  }
  .ease-initial {
    --tw-ease: initial;
  }
  .perspective-none {
    perspective: none;
  }
  .perspective-origin-bottom {
    perspective-origin: bottom;
  }
  .perspective-origin-bottom-left {
    perspective-origin: bottom left;
  }
  .perspective-origin-bottom-right {
    perspective-origin: bottom right;
  }
  .perspective-origin-center {
    perspective-origin: center;
  }
  .perspective-origin-left {
    perspective-origin: left;
  }
  .perspective-origin-right {
    perspective-origin: right;
  }
  .perspective-origin-top {
    perspective-origin: top;
  }
  .perspective-origin-top-left {
    perspective-origin: top left;
  }
  .perspective-origin-top-right {
    perspective-origin: top right;
  }
  .ring-inset {
    --tw-ring-inset: inset;
  }
  .transform-3d {
    transform-style: preserve-3d;
  }
  .transform-border {
    transform-box: border-box;
  }
  .transform-content {
    transform-box: content-box;
  }
  .transform-fill {
    transform-box: fill-box;
  }
  .transform-flat {
    transform-style: flat;
  }
  .transform-stroke {
    transform-box: stroke-box;
  }
  .transform-view {
    transform-box: view-box;
  }
  .group-hover\:translate-x-1 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:text-gray-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-gray-500);
      }
    }
  }
  .group-hover\:text-white\/80 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: color-mix(in oklab, var(--color-white) 80%, transparent);
      }
    }
  }
  .group-focus\:translate-x-1 {
    &:is(:where(.group):focus *) {
      --tw-translate-x: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .group-focus\:text-white\/80 {
    &:is(:where(.group):focus *) {
      color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:inset-0 {
    &::before {
      content: var(--tw-content);
      inset: calc(var(--spacing) * 0);
    }
  }
  .before\:inset-x-0 {
    &::before {
      content: var(--tw-content);
      inset-inline: calc(var(--spacing) * 0);
    }
  }
  .before\:end-2 {
    &::before {
      content: var(--tw-content);
      inset-inline-end: calc(var(--spacing) * 2);
    }
  }
  .before\:top-1\/2 {
    &::before {
      content: var(--tw-content);
      top: calc(1/2 * 100%);
    }
  }
  .before\:z-1 {
    &::before {
      content: var(--tw-content);
      z-index: 1;
    }
  }
  .before\:size-1 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 1);
      height: calc(var(--spacing) * 1);
    }
  }
  .before\:size-full {
    &::before {
      content: var(--tw-content);
      width: 100%;
      height: 100%;
    }
  }
  .before\:-translate-y-1\/2 {
    &::before {
      content: var(--tw-content);
      --tw-translate-y: calc(calc(1/2 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .before\:rounded-full {
    &::before {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  .before\:bg-gray-300 {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-gray-300);
    }
  }
  .before\:bg-linear-to-t {
    &::before {
      content: var(--tw-content);
      --tw-gradient-position: to top in oklab;
      background-image: linear-gradient(var(--tw-gradient-stops));
    }
  }
  .before\:from-gray-900\/70 {
    &::before {
      content: var(--tw-content);
      --tw-gradient-from: color-mix(in oklab, var(--color-gray-900) 70%, transparent);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .last\:pe-0 {
    &:last-child {
      padding-inline-end: calc(var(--spacing) * 0);
    }
  }
  .last-of-type\:before\:hidden {
    &:last-of-type {
      &::before {
        content: var(--tw-content);
        display: none;
      }
    }
  }
  .hover\:prose-lg {
    &:hover {
      @media (hover: hover) {
        font-size: 1.125rem;
        line-height: 1.7777778;
        :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 1.3333333em;
          margin-bottom: 1.3333333em;
        }
        :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          font-size: 1.2222222em;
          line-height: 1.4545455;
          margin-top: 1.0909091em;
          margin-bottom: 1.0909091em;
        }
        :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 1.6666667em;
          margin-bottom: 1.6666667em;
          padding-inline-start: 1em;
        }
        :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          font-size: 2.6666667em;
          margin-top: 0;
          margin-bottom: 0.8333333em;
          line-height: 1;
        }
        :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          font-size: 1.6666667em;
          margin-top: 1.8666667em;
          margin-bottom: 1.0666667em;
          line-height: 1.3333333;
        }
        :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          font-size: 1.3333333em;
          margin-top: 1.6666667em;
          margin-bottom: 0.6666667em;
          line-height: 1.5;
        }
        :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 1.7777778em;
          margin-bottom: 0.4444444em;
          line-height: 1.5555556;
        }
        :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 1.7777778em;
          margin-bottom: 1.7777778em;
        }
        :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 1.7777778em;
          margin-bottom: 1.7777778em;
        }
        :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 0;
          margin-bottom: 0;
        }
        :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 1.7777778em;
          margin-bottom: 1.7777778em;
        }
        :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          font-size: 0.8888889em;
          border-radius: 0.3125rem;
          padding-top: 0.2222222em;
          padding-inline-end: 0.4444444em;
          padding-bottom: 0.2222222em;
          padding-inline-start: 0.4444444em;
        }
        :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          font-size: 0.8888889em;
        }
        :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          font-size: 0.8666667em;
        }
        :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          font-size: 0.875em;
        }
        :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          font-size: 0.8888889em;
          line-height: 1.75;
          margin-top: 2em;
          margin-bottom: 2em;
          border-radius: 0.375rem;
          padding-top: 1em;
          padding-inline-end: 1.5em;
          padding-bottom: 1em;
          padding-inline-start: 1.5em;
        }
        :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 1.3333333em;
          margin-bottom: 1.3333333em;
          padding-inline-start: 1.5555556em;
        }
        :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 1.3333333em;
          margin-bottom: 1.3333333em;
          padding-inline-start: 1.5555556em;
        }
        :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 0.6666667em;
          margin-bottom: 0.6666667em;
        }
        :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          padding-inline-start: 0.4444444em;
        }
        :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          padding-inline-start: 0.4444444em;
        }
        :where(.hover\:prose-lg > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 0.8888889em;
          margin-bottom: 0.8888889em;
        }
        :where(.hover\:prose-lg > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 1.3333333em;
        }
        :where(.hover\:prose-lg > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-bottom: 1.3333333em;
        }
        :where(.hover\:prose-lg > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 1.3333333em;
        }
        :where(.hover\:prose-lg > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-bottom: 1.3333333em;
        }
        :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 0.8888889em;
          margin-bottom: 0.8888889em;
        }
        :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 1.3333333em;
          margin-bottom: 1.3333333em;
        }
        :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 1.3333333em;
        }
        :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 0.6666667em;
          padding-inline-start: 1.5555556em;
        }
        :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 3.1111111em;
          margin-bottom: 3.1111111em;
        }
        :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 0;
        }
        :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 0;
        }
        :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 0;
        }
        :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 0;
        }
        :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          font-size: 0.8888889em;
          line-height: 1.5;
        }
        :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          padding-inline-end: 0.75em;
          padding-bottom: 0.75em;
          padding-inline-start: 0.75em;
        }
        :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          padding-inline-start: 0;
        }
        :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          padding-inline-end: 0;
        }
        :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          padding-top: 0.75em;
          padding-inline-end: 0.75em;
          padding-bottom: 0.75em;
          padding-inline-start: 0.75em;
        }
        :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          padding-inline-start: 0;
        }
        :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          padding-inline-end: 0;
        }
        :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 1.7777778em;
          margin-bottom: 1.7777778em;
        }
        :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 0;
          margin-bottom: 0;
        }
        :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          font-size: 0.8888889em;
          line-height: 1.5;
          margin-top: 1em;
        }
        :where(.hover\:prose-lg > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-top: 0;
        }
        :where(.hover\:prose-lg > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
          margin-bottom: 0;
        }
      }
    }
  }
  .hover\:translate-y-\[-10px\] {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: -10px;
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:bg-blue-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-700);
      }
    }
  }
  .hover\:bg-gray-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-50);
      }
    }
  }
  .hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hover\:bg-gray-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-200);
      }
    }
  }
  .hover\:text-blue-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-800);
      }
    }
  }
  .hover\:text-gray-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-500);
      }
    }
  }
  .hover\:text-gray-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-600);
      }
    }
  }
  .hover\:text-gray-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-800);
      }
    }
  }
  .focus\:border-blue-500 {
    &:focus {
      border-color: var(--color-blue-500);
    }
  }
  .focus\:bg-gray-50 {
    &:focus {
      background-color: var(--color-gray-50);
    }
  }
  .focus\:bg-gray-100 {
    &:focus {
      background-color: var(--color-gray-100);
    }
  }
  .focus\:bg-gray-200 {
    &:focus {
      background-color: var(--color-gray-200);
    }
  }
  .focus\:text-gray-500 {
    &:focus {
      color: var(--color-gray-500);
    }
  }
  .focus\:text-gray-600 {
    &:focus {
      color: var(--color-gray-600);
    }
  }
  .focus\:text-gray-800 {
    &:focus {
      color: var(--color-gray-800);
    }
  }
  .focus\:opacity-80 {
    &:focus {
      opacity: 80%;
    }
  }
  .focus\:ring-1 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-blue-500 {
    &:focus {
      --tw-ring-color: var(--color-blue-500);
    }
  }
  .focus\:outline-hidden {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .disabled\:pointer-events-none {
    &:disabled {
      pointer-events: none;
    }
  }
  .disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .sm\:ms-2 {
    @media (width >= 40rem) {
      margin-inline-start: calc(var(--spacing) * 2);
    }
  }
  .sm\:ms-4 {
    @media (width >= 40rem) {
      margin-inline-start: calc(var(--spacing) * 4);
    }
  }
  .sm\:prose {
    @media (width >= 40rem) {
      color: var(--tw-prose-body);
      max-width: 65ch;
      :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
      }
      :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-lead);
        font-size: 1.25em;
        line-height: 1.6;
        margin-top: 1.2em;
        margin-bottom: 1.2em;
      }
      :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-links);
        text-decoration: underline;
        font-weight: 500;
      }
      :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-bold);
        font-weight: 600;
      }
      :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: decimal;
        margin-top: 1.25em;
        margin-bottom: 1.25em;
        padding-inline-start: 1.625em;
      }
      :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-alpha;
      }
      :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-alpha;
      }
      :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-alpha;
      }
      :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-alpha;
      }
      :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-roman;
      }
      :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-roman;
      }
      :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-roman;
      }
      :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-roman;
      }
      :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: decimal;
      }
      :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: disc;
        margin-top: 1.25em;
        margin-bottom: 1.25em;
        padding-inline-start: 1.625em;
      }
      :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
        font-weight: 400;
        color: var(--tw-prose-counters);
      }
      :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
        color: var(--tw-prose-bullets);
      }
      :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        margin-top: 1.25em;
      }
      :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-color: var(--tw-prose-hr);
        border-top-width: 1;
        margin-top: 3em;
        margin-bottom: 3em;
      }
      :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 500;
        font-style: italic;
        color: var(--tw-prose-quotes);
        border-inline-start-width: 0.25rem;
        border-inline-start-color: var(--tw-prose-quote-borders);
        quotes: "\201C""\201D""\2018""\2019";
        margin-top: 1.6em;
        margin-bottom: 1.6em;
        padding-inline-start: 1em;
      }
      :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
        content: open-quote;
      }
      :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
        content: close-quote;
      }
      :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 800;
        font-size: 2.25em;
        margin-top: 0;
        margin-bottom: 0.8888889em;
        line-height: 1.1111111;
      }
      :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 900;
        color: inherit;
      }
      :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 700;
        font-size: 1.5em;
        margin-top: 2em;
        margin-bottom: 1em;
        line-height: 1.3333333;
      }
      :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 800;
        color: inherit;
      }
      :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        font-size: 1.25em;
        margin-top: 1.6em;
        margin-bottom: 0.6em;
        line-height: 1.6;
      }
      :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 700;
        color: inherit;
      }
      :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        margin-top: 1.5em;
        margin-bottom: 0.5em;
        line-height: 1.5;
      }
      :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 700;
        color: inherit;
      }
      :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        display: block;
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 500;
        font-family: inherit;
        color: var(--tw-prose-kbd);
        box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
        font-size: 0.875em;
        border-radius: 0.3125rem;
        padding-top: 0.1875em;
        padding-inline-end: 0.375em;
        padding-bottom: 0.1875em;
        padding-inline-start: 0.375em;
      }
      :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-code);
        font-weight: 600;
        font-size: 0.875em;
      }
      :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
        content: "`";
      }
      :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
        content: "`";
      }
      :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
        font-size: 0.875em;
      }
      :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
        font-size: 0.9em;
      }
      :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-pre-code);
        background-color: var(--tw-prose-pre-bg);
        overflow-x: auto;
        font-weight: 400;
        font-size: 0.875em;
        line-height: 1.7142857;
        margin-top: 1.7142857em;
        margin-bottom: 1.7142857em;
        border-radius: 0.375rem;
        padding-top: 0.8571429em;
        padding-inline-end: 1.1428571em;
        padding-bottom: 0.8571429em;
        padding-inline-start: 1.1428571em;
      }
      :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        background-color: transparent;
        border-width: 0;
        border-radius: 0;
        padding: 0;
        font-weight: inherit;
        color: inherit;
        font-size: inherit;
        font-family: inherit;
        line-height: inherit;
      }
      :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
        content: none;
      }
      :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
        content: none;
      }
      :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        width: 100%;
        table-layout: auto;
        margin-top: 2em;
        margin-bottom: 2em;
        font-size: 0.875em;
        line-height: 1.7142857;
      }
      :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-th-borders);
      }
      :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        vertical-align: bottom;
        padding-inline-end: 0.5714286em;
        padding-bottom: 0.5714286em;
        padding-inline-start: 0.5714286em;
      }
      :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-td-borders);
      }
      :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-bottom-width: 0;
      }
      :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        vertical-align: baseline;
      }
      :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-top-width: 1px;
        border-top-color: var(--tw-prose-th-borders);
      }
      :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        vertical-align: top;
      }
      :where(th, td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        text-align: start;
      }
      :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
      }
      :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-captions);
        font-size: 0.875em;
        line-height: 1.4285714;
        margin-top: 0.8571429em;
      }
      --tw-prose-body: oklch(0.373 0.034 259.733);
      --tw-prose-headings: oklch(0.21 0.034 264.665);
      --tw-prose-lead: oklch(0.446 0.03 256.802);
      --tw-prose-links: oklch(0.21 0.034 264.665);
      --tw-prose-bold: oklch(0.21 0.034 264.665);
      --tw-prose-counters: oklch(0.551 0.027 264.364);
      --tw-prose-bullets: oklch(0.872 0.01 258.338);
      --tw-prose-hr: oklch(0.928 0.006 264.531);
      --tw-prose-quotes: oklch(0.21 0.034 264.665);
      --tw-prose-quote-borders: oklch(0.928 0.006 264.531);
      --tw-prose-captions: oklch(0.551 0.027 264.364);
      --tw-prose-kbd: oklch(0.21 0.034 264.665);
      --tw-prose-kbd-shadows: NaN NaN NaN;
      --tw-prose-code: oklch(0.21 0.034 264.665);
      --tw-prose-pre-code: oklch(0.928 0.006 264.531);
      --tw-prose-pre-bg: oklch(0.278 0.033 256.848);
      --tw-prose-th-borders: oklch(0.872 0.01 258.338);
      --tw-prose-td-borders: oklch(0.928 0.006 264.531);
      --tw-prose-invert-body: oklch(0.872 0.01 258.338);
      --tw-prose-invert-headings: #fff;
      --tw-prose-invert-lead: oklch(0.707 0.022 261.325);
      --tw-prose-invert-links: #fff;
      --tw-prose-invert-bold: #fff;
      --tw-prose-invert-counters: oklch(0.707 0.022 261.325);
      --tw-prose-invert-bullets: oklch(0.446 0.03 256.802);
      --tw-prose-invert-hr: oklch(0.373 0.034 259.733);
      --tw-prose-invert-quotes: oklch(0.967 0.003 264.542);
      --tw-prose-invert-quote-borders: oklch(0.373 0.034 259.733);
      --tw-prose-invert-captions: oklch(0.707 0.022 261.325);
      --tw-prose-invert-kbd: #fff;
      --tw-prose-invert-kbd-shadows: 255 255 255;
      --tw-prose-invert-code: #fff;
      --tw-prose-invert-pre-code: oklch(0.872 0.01 258.338);
      --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
      --tw-prose-invert-th-borders: oklch(0.446 0.03 256.802);
      --tw-prose-invert-td-borders: oklch(0.373 0.034 259.733);
      font-size: 1rem;
      line-height: 1.75;
      :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
      }
      :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
      }
      :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.375em;
      }
      :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.375em;
      }
      :where(.sm\:prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.75em;
        margin-bottom: 0.75em;
      }
      :where(.sm\:prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
      }
      :where(.sm\:prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.25em;
      }
      :where(.sm\:prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
      }
      :where(.sm\:prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.25em;
      }
      :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.75em;
        margin-bottom: 0.75em;
      }
      :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
      }
      :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.5em;
        padding-inline-start: 1.625em;
      }
      :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
      }
      :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
      }
      :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-top: 0.5714286em;
        padding-inline-end: 0.5714286em;
        padding-bottom: 0.5714286em;
        padding-inline-start: 0.5714286em;
      }
      :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
      }
      :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
      }
      :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(.sm\:prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(.sm\:prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 0;
      }
    }
  }
  .sm\:mt-10 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 10);
    }
  }
  .sm\:mb-1 {
    @media (width >= 40rem) {
      margin-bottom: calc(var(--spacing) * 1);
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:h-24 {
    @media (width >= 40rem) {
      height: calc(var(--spacing) * 24);
    }
  }
  .sm\:w-24 {
    @media (width >= 40rem) {
      width: calc(var(--spacing) * 24);
    }
  }
  .sm\:grid-cols-1 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:items-center {
    @media (width >= 40rem) {
      align-items: center;
    }
  }
  .sm\:space-y-8 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .sm\:gap-x-3 {
    @media (width >= 40rem) {
      column-gap: calc(var(--spacing) * 3);
    }
  }
  .sm\:p-6 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 6);
    }
  }
  .sm\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:py-8 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 8);
    }
  }
  .sm\:text-3xl {
    @media (width >= 40rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .sm\:text-5xl {
    @media (width >= 40rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .md\:col-span-3 {
    @media (width >= 48rem) {
      grid-column: span 3 / span 3;
    }
  }
  .md\:mx-auto {
    @media (width >= 48rem) {
      margin-inline: auto;
    }
  }
  .md\:prose-lg {
    @media (width >= 48rem) {
      font-size: 1.125rem;
      line-height: 1.7777778;
      :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
      }
      :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 1.2222222em;
        line-height: 1.4545455;
        margin-top: 1.0909091em;
        margin-bottom: 1.0909091em;
      }
      :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.6666667em;
        margin-bottom: 1.6666667em;
        padding-inline-start: 1em;
      }
      :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 2.6666667em;
        margin-top: 0;
        margin-bottom: 0.8333333em;
        line-height: 1;
      }
      :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 1.6666667em;
        margin-top: 1.8666667em;
        margin-bottom: 1.0666667em;
        line-height: 1.3333333;
      }
      :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 1.3333333em;
        margin-top: 1.6666667em;
        margin-bottom: 0.6666667em;
        line-height: 1.5;
      }
      :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 0.4444444em;
        line-height: 1.5555556;
      }
      :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em;
      }
      :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em;
      }
      :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
      }
      :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em;
      }
      :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8888889em;
        border-radius: 0.3125rem;
        padding-top: 0.2222222em;
        padding-inline-end: 0.4444444em;
        padding-bottom: 0.2222222em;
        padding-inline-start: 0.4444444em;
      }
      :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8888889em;
      }
      :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8666667em;
      }
      :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.875em;
      }
      :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8888889em;
        line-height: 1.75;
        margin-top: 2em;
        margin-bottom: 2em;
        border-radius: 0.375rem;
        padding-top: 1em;
        padding-inline-end: 1.5em;
        padding-bottom: 1em;
        padding-inline-start: 1.5em;
      }
      :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
        padding-inline-start: 1.5555556em;
      }
      :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
        padding-inline-start: 1.5555556em;
      }
      :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.6666667em;
        margin-bottom: 0.6666667em;
      }
      :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.4444444em;
      }
      :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.4444444em;
      }
      :where(.md\:prose-lg > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.8888889em;
        margin-bottom: 0.8888889em;
      }
      :where(.md\:prose-lg > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
      }
      :where(.md\:prose-lg > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.3333333em;
      }
      :where(.md\:prose-lg > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
      }
      :where(.md\:prose-lg > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.3333333em;
      }
      :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.8888889em;
        margin-bottom: 0.8888889em;
      }
      :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
      }
      :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
      }
      :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.6666667em;
        padding-inline-start: 1.5555556em;
      }
      :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 3.1111111em;
        margin-bottom: 3.1111111em;
      }
      :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8888889em;
        line-height: 1.5;
      }
      :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0.75em;
        padding-bottom: 0.75em;
        padding-inline-start: 0.75em;
      }
      :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
      }
      :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
      }
      :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-top: 0.75em;
        padding-inline-end: 0.75em;
        padding-bottom: 0.75em;
        padding-inline-start: 0.75em;
      }
      :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
      }
      :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
      }
      :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em;
      }
      :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
      }
      :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8888889em;
        line-height: 1.5;
        margin-top: 1em;
      }
      :where(.md\:prose-lg > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(.md\:prose-lg > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 0;
      }
    }
  }
  .md\:mt-0 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:grid {
    @media (width >= 48rem) {
      display: grid;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-4 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:flex-nowrap {
    @media (width >= 48rem) {
      flex-wrap: nowrap;
    }
  }
  .md\:items-center {
    @media (width >= 48rem) {
      align-items: center;
    }
  }
  .md\:justify-between {
    @media (width >= 48rem) {
      justify-content: space-between;
    }
  }
  .md\:justify-end {
    @media (width >= 48rem) {
      justify-content: flex-end;
    }
  }
  .md\:justify-start {
    @media (width >= 48rem) {
      justify-content: flex-start;
    }
  }
  .md\:gap-3 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 3);
    }
  }
  .md\:gap-12 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 12);
    }
  }
  .md\:space-y-4 {
    @media (width >= 48rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .md\:space-y-8 {
    @media (width >= 48rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .md\:border-s-0 {
    @media (width >= 48rem) {
      border-inline-start-style: var(--tw-border-style);
      border-inline-start-width: 0px;
    }
  }
  .md\:border-b-2 {
    @media (width >= 48rem) {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 2px;
    }
  }
  .md\:px-0 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .md\:px-1 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 1);
    }
  }
  .md\:px-4 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .md\:py-0 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 0);
    }
  }
  .md\:py-2\.5 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 2.5);
    }
  }
  .md\:py-3 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 3);
    }
  }
  .md\:ps-7 {
    @media (width >= 48rem) {
      padding-inline-start: calc(var(--spacing) * 7);
    }
  }
  .md\:text-3xl {
    @media (width >= 48rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .md\:text-5xl {
    @media (width >= 48rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .md\:text-lg {
    @media (width >= 48rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .md\:text-xl {
    @media (width >= 48rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .md\:text-xs {
    @media (width >= 48rem) {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .lg\:col-span-5 {
    @media (width >= 64rem) {
      grid-column: span 5 / span 5;
    }
  }
  .lg\:col-start-1 {
    @media (width >= 64rem) {
      grid-column-start: 1;
    }
  }
  .lg\:mx-auto {
    @media (width >= 64rem) {
      margin-inline: auto;
    }
  }
  .lg\:prose-lg {
    @media (width >= 64rem) {
      font-size: 1.125rem;
      line-height: 1.7777778;
      :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
      }
      :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 1.2222222em;
        line-height: 1.4545455;
        margin-top: 1.0909091em;
        margin-bottom: 1.0909091em;
      }
      :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.6666667em;
        margin-bottom: 1.6666667em;
        padding-inline-start: 1em;
      }
      :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 2.6666667em;
        margin-top: 0;
        margin-bottom: 0.8333333em;
        line-height: 1;
      }
      :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 1.6666667em;
        margin-top: 1.8666667em;
        margin-bottom: 1.0666667em;
        line-height: 1.3333333;
      }
      :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 1.3333333em;
        margin-top: 1.6666667em;
        margin-bottom: 0.6666667em;
        line-height: 1.5;
      }
      :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 0.4444444em;
        line-height: 1.5555556;
      }
      :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em;
      }
      :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em;
      }
      :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
      }
      :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em;
      }
      :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8888889em;
        border-radius: 0.3125rem;
        padding-top: 0.2222222em;
        padding-inline-end: 0.4444444em;
        padding-bottom: 0.2222222em;
        padding-inline-start: 0.4444444em;
      }
      :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8888889em;
      }
      :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8666667em;
      }
      :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.875em;
      }
      :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8888889em;
        line-height: 1.75;
        margin-top: 2em;
        margin-bottom: 2em;
        border-radius: 0.375rem;
        padding-top: 1em;
        padding-inline-end: 1.5em;
        padding-bottom: 1em;
        padding-inline-start: 1.5em;
      }
      :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
        padding-inline-start: 1.5555556em;
      }
      :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
        padding-inline-start: 1.5555556em;
      }
      :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.6666667em;
        margin-bottom: 0.6666667em;
      }
      :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.4444444em;
      }
      :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.4444444em;
      }
      :where(.lg\:prose-lg > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.8888889em;
        margin-bottom: 0.8888889em;
      }
      :where(.lg\:prose-lg > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
      }
      :where(.lg\:prose-lg > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.3333333em;
      }
      :where(.lg\:prose-lg > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
      }
      :where(.lg\:prose-lg > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.3333333em;
      }
      :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.8888889em;
        margin-bottom: 0.8888889em;
      }
      :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
      }
      :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.3333333em;
      }
      :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.6666667em;
        padding-inline-start: 1.5555556em;
      }
      :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 3.1111111em;
        margin-bottom: 3.1111111em;
      }
      :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8888889em;
        line-height: 1.5;
      }
      :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0.75em;
        padding-bottom: 0.75em;
        padding-inline-start: 0.75em;
      }
      :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
      }
      :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
      }
      :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-top: 0.75em;
        padding-inline-end: 0.75em;
        padding-bottom: 0.75em;
        padding-inline-start: 0.75em;
      }
      :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
      }
      :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
      }
      :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em;
      }
      :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
      }
      :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8888889em;
        line-height: 1.5;
        margin-top: 1em;
      }
      :where(.lg\:prose-lg > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(.lg\:prose-lg > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 0;
      }
    }
  }
  .lg\:prose-xl {
    @media (width >= 64rem) {
      font-size: 1.25rem;
      line-height: 1.8;
      :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.2em;
        margin-bottom: 1.2em;
      }
      :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 1.2em;
        line-height: 1.5;
        margin-top: 1em;
        margin-bottom: 1em;
      }
      :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.6em;
        margin-bottom: 1.6em;
        padding-inline-start: 1.0666667em;
      }
      :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 2.8em;
        margin-top: 0;
        margin-bottom: 0.8571429em;
        line-height: 1;
      }
      :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 1.8em;
        margin-top: 1.5555556em;
        margin-bottom: 0.8888889em;
        line-height: 1.1111111;
      }
      :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 1.5em;
        margin-top: 1.6em;
        margin-bottom: 0.6666667em;
        line-height: 1.3333333;
      }
      :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.8em;
        margin-bottom: 0.6em;
        line-height: 1.6;
      }
      :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
      }
      :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.9em;
        border-radius: 0.3125rem;
        padding-top: 0.25em;
        padding-inline-end: 0.4em;
        padding-bottom: 0.25em;
        padding-inline-start: 0.4em;
      }
      :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.9em;
      }
      :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.8611111em;
      }
      :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.9em;
      }
      :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.9em;
        line-height: 1.7777778;
        margin-top: 2em;
        margin-bottom: 2em;
        border-radius: 0.5rem;
        padding-top: 1.1111111em;
        padding-inline-end: 1.3333333em;
        padding-bottom: 1.1111111em;
        padding-inline-start: 1.3333333em;
      }
      :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.2em;
        margin-bottom: 1.2em;
        padding-inline-start: 1.6em;
      }
      :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.2em;
        margin-bottom: 1.2em;
        padding-inline-start: 1.6em;
      }
      :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.6em;
        margin-bottom: 0.6em;
      }
      :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.4em;
      }
      :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.4em;
      }
      :where(.lg\:prose-xl > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.8em;
        margin-bottom: 0.8em;
      }
      :where(.lg\:prose-xl > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.2em;
      }
      :where(.lg\:prose-xl > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.2em;
      }
      :where(.lg\:prose-xl > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.2em;
      }
      :where(.lg\:prose-xl > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.2em;
      }
      :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.8em;
        margin-bottom: 0.8em;
      }
      :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.2em;
        margin-bottom: 1.2em;
      }
      :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.2em;
      }
      :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.6em;
        padding-inline-start: 1.6em;
      }
      :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2.8em;
        margin-bottom: 2.8em;
      }
      :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.9em;
        line-height: 1.5555556;
      }
      :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0.6666667em;
        padding-bottom: 0.8888889em;
        padding-inline-start: 0.6666667em;
      }
      :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
      }
      :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
      }
      :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-top: 0.8888889em;
        padding-inline-end: 0.6666667em;
        padding-bottom: 0.8888889em;
        padding-inline-start: 0.6666667em;
      }
      :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
      }
      :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
      }
      :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
      }
      :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-size: 0.9em;
        line-height: 1.5555556;
        margin-top: 1em;
      }
      :where(.lg\:prose-xl > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(.lg\:prose-xl > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 0;
      }
    }
  }
  .lg\:mt-0 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:grid {
    @media (width >= 64rem) {
      display: grid;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:w-70 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 70);
    }
  }
  .lg\:w-90 {
    @media (width >= 64rem) {
      width: calc(var(--spacing) * 90);
    }
  }
  .lg\:max-w-7xl {
    @media (width >= 64rem) {
      max-width: var(--container-7xl);
    }
  }
  .lg\:grid-cols-2 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-4 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:flex-nowrap {
    @media (width >= 64rem) {
      flex-wrap: nowrap;
    }
  }
  .lg\:items-center {
    @media (width >= 64rem) {
      align-items: center;
    }
  }
  .lg\:justify-between {
    @media (width >= 64rem) {
      justify-content: space-between;
    }
  }
  .lg\:justify-end {
    @media (width >= 64rem) {
      justify-content: flex-end;
    }
  }
  .lg\:justify-start {
    @media (width >= 64rem) {
      justify-content: flex-start;
    }
  }
  .lg\:gap-3 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 3);
    }
  }
  .lg\:gap-16 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 16);
    }
  }
  .lg\:border-s-0 {
    @media (width >= 64rem) {
      border-inline-start-style: var(--tw-border-style);
      border-inline-start-width: 0px;
    }
  }
  .lg\:border-b-2 {
    @media (width >= 64rem) {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 2px;
    }
  }
  .lg\:px-0 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
  .lg\:px-1 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 1);
    }
  }
  .lg\:px-4 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .lg\:px-8 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .lg\:py-0 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 0);
    }
  }
  .lg\:py-2\.5 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 2.5);
    }
  }
  .lg\:py-3 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 3);
    }
  }
  .lg\:ps-7 {
    @media (width >= 64rem) {
      padding-inline-start: calc(var(--spacing) * 7);
    }
  }
  .lg\:pt-10 {
    @media (width >= 64rem) {
      padding-top: calc(var(--spacing) * 10);
    }
  }
  .lg\:text-2xl {
    @media (width >= 64rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .lg\:text-4xl {
    @media (width >= 64rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .lg\:text-7xl {
    @media (width >= 64rem) {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .lg\:text-base {
    @media (width >= 64rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .lg\:text-xl {
    @media (width >= 64rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .dark\:prose {
    @media (prefers-color-scheme: dark) {
      color: var(--tw-prose-body);
      max-width: 65ch;
      :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
      }
      :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-lead);
        font-size: 1.25em;
        line-height: 1.6;
        margin-top: 1.2em;
        margin-bottom: 1.2em;
      }
      :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-links);
        text-decoration: underline;
        font-weight: 500;
      }
      :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-bold);
        font-weight: 600;
      }
      :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: decimal;
        margin-top: 1.25em;
        margin-bottom: 1.25em;
        padding-inline-start: 1.625em;
      }
      :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-alpha;
      }
      :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-alpha;
      }
      :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-alpha;
      }
      :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-alpha;
      }
      :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-roman;
      }
      :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-roman;
      }
      :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-roman;
      }
      :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-roman;
      }
      :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: decimal;
      }
      :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: disc;
        margin-top: 1.25em;
        margin-bottom: 1.25em;
        padding-inline-start: 1.625em;
      }
      :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
        font-weight: 400;
        color: var(--tw-prose-counters);
      }
      :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
        color: var(--tw-prose-bullets);
      }
      :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        margin-top: 1.25em;
      }
      :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-color: var(--tw-prose-hr);
        border-top-width: 1;
        margin-top: 3em;
        margin-bottom: 3em;
      }
      :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 500;
        font-style: italic;
        color: var(--tw-prose-quotes);
        border-inline-start-width: 0.25rem;
        border-inline-start-color: var(--tw-prose-quote-borders);
        quotes: "\201C""\201D""\2018""\2019";
        margin-top: 1.6em;
        margin-bottom: 1.6em;
        padding-inline-start: 1em;
      }
      :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
        content: open-quote;
      }
      :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
        content: close-quote;
      }
      :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 800;
        font-size: 2.25em;
        margin-top: 0;
        margin-bottom: 0.8888889em;
        line-height: 1.1111111;
      }
      :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 900;
        color: inherit;
      }
      :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 700;
        font-size: 1.5em;
        margin-top: 2em;
        margin-bottom: 1em;
        line-height: 1.3333333;
      }
      :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 800;
        color: inherit;
      }
      :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        font-size: 1.25em;
        margin-top: 1.6em;
        margin-bottom: 0.6em;
        line-height: 1.6;
      }
      :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 700;
        color: inherit;
      }
      :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        margin-top: 1.5em;
        margin-bottom: 0.5em;
        line-height: 1.5;
      }
      :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 700;
        color: inherit;
      }
      :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        display: block;
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 500;
        font-family: inherit;
        color: var(--tw-prose-kbd);
        box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
        font-size: 0.875em;
        border-radius: 0.3125rem;
        padding-top: 0.1875em;
        padding-inline-end: 0.375em;
        padding-bottom: 0.1875em;
        padding-inline-start: 0.375em;
      }
      :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-code);
        font-weight: 600;
        font-size: 0.875em;
      }
      :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
        content: "`";
      }
      :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
        content: "`";
      }
      :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
        font-size: 0.875em;
      }
      :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
        font-size: 0.9em;
      }
      :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
      }
      :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-pre-code);
        background-color: var(--tw-prose-pre-bg);
        overflow-x: auto;
        font-weight: 400;
        font-size: 0.875em;
        line-height: 1.7142857;
        margin-top: 1.7142857em;
        margin-bottom: 1.7142857em;
        border-radius: 0.375rem;
        padding-top: 0.8571429em;
        padding-inline-end: 1.1428571em;
        padding-bottom: 0.8571429em;
        padding-inline-start: 1.1428571em;
      }
      :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        background-color: transparent;
        border-width: 0;
        border-radius: 0;
        padding: 0;
        font-weight: inherit;
        color: inherit;
        font-size: inherit;
        font-family: inherit;
        line-height: inherit;
      }
      :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
        content: none;
      }
      :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
        content: none;
      }
      :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        width: 100%;
        table-layout: auto;
        margin-top: 2em;
        margin-bottom: 2em;
        font-size: 0.875em;
        line-height: 1.7142857;
      }
      :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-th-borders);
      }
      :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        vertical-align: bottom;
        padding-inline-end: 0.5714286em;
        padding-bottom: 0.5714286em;
        padding-inline-start: 0.5714286em;
      }
      :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-td-borders);
      }
      :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-bottom-width: 0;
      }
      :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        vertical-align: baseline;
      }
      :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-top-width: 1px;
        border-top-color: var(--tw-prose-th-borders);
      }
      :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        vertical-align: top;
      }
      :where(th, td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        text-align: start;
      }
      :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
      }
      :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-captions);
        font-size: 0.875em;
        line-height: 1.4285714;
        margin-top: 0.8571429em;
      }
      --tw-prose-body: oklch(0.373 0.034 259.733);
      --tw-prose-headings: oklch(0.21 0.034 264.665);
      --tw-prose-lead: oklch(0.446 0.03 256.802);
      --tw-prose-links: oklch(0.21 0.034 264.665);
      --tw-prose-bold: oklch(0.21 0.034 264.665);
      --tw-prose-counters: oklch(0.551 0.027 264.364);
      --tw-prose-bullets: oklch(0.872 0.01 258.338);
      --tw-prose-hr: oklch(0.928 0.006 264.531);
      --tw-prose-quotes: oklch(0.21 0.034 264.665);
      --tw-prose-quote-borders: oklch(0.928 0.006 264.531);
      --tw-prose-captions: oklch(0.551 0.027 264.364);
      --tw-prose-kbd: oklch(0.21 0.034 264.665);
      --tw-prose-kbd-shadows: NaN NaN NaN;
      --tw-prose-code: oklch(0.21 0.034 264.665);
      --tw-prose-pre-code: oklch(0.928 0.006 264.531);
      --tw-prose-pre-bg: oklch(0.278 0.033 256.848);
      --tw-prose-th-borders: oklch(0.872 0.01 258.338);
      --tw-prose-td-borders: oklch(0.928 0.006 264.531);
      --tw-prose-invert-body: oklch(0.872 0.01 258.338);
      --tw-prose-invert-headings: #fff;
      --tw-prose-invert-lead: oklch(0.707 0.022 261.325);
      --tw-prose-invert-links: #fff;
      --tw-prose-invert-bold: #fff;
      --tw-prose-invert-counters: oklch(0.707 0.022 261.325);
      --tw-prose-invert-bullets: oklch(0.446 0.03 256.802);
      --tw-prose-invert-hr: oklch(0.373 0.034 259.733);
      --tw-prose-invert-quotes: oklch(0.967 0.003 264.542);
      --tw-prose-invert-quote-borders: oklch(0.373 0.034 259.733);
      --tw-prose-invert-captions: oklch(0.707 0.022 261.325);
      --tw-prose-invert-kbd: #fff;
      --tw-prose-invert-kbd-shadows: 255 255 255;
      --tw-prose-invert-code: #fff;
      --tw-prose-invert-pre-code: oklch(0.872 0.01 258.338);
      --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
      --tw-prose-invert-th-borders: oklch(0.446 0.03 256.802);
      --tw-prose-invert-td-borders: oklch(0.373 0.034 259.733);
      font-size: 1rem;
      line-height: 1.75;
      :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
      }
      :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
      }
      :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.375em;
      }
      :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.375em;
      }
      :where(.dark\:prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.75em;
        margin-bottom: 0.75em;
      }
      :where(.dark\:prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
      }
      :where(.dark\:prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.25em;
      }
      :where(.dark\:prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
      }
      :where(.dark\:prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.25em;
      }
      :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.75em;
        margin-bottom: 0.75em;
      }
      :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
      }
      :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.5em;
        padding-inline-start: 1.625em;
      }
      :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
      }
      :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
      }
      :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-top: 0.5714286em;
        padding-inline-end: 0.5714286em;
        padding-bottom: 0.5714286em;
        padding-inline-start: 0.5714286em;
      }
      :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
      }
      :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
      }
      :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
      }
      :where(.dark\:prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
      }
      :where(.dark\:prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 0;
      }
    }
  }
  .dark\:\!border-neutral-700 {
    @media (prefers-color-scheme: dark) {
      border-color: var(--color-neutral-700) !important;
    }
  }
  .dark\:border-neutral-600 {
    @media (prefers-color-scheme: dark) {
      border-color: var(--color-neutral-600);
    }
  }
  .dark\:border-neutral-700 {
    @media (prefers-color-scheme: dark) {
      border-color: var(--color-neutral-700);
    }
  }
  .dark\:\!bg-neutral-800 {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-neutral-800) !important;
    }
  }
  .dark\:bg-blue-500 {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-blue-500);
    }
  }
  .dark\:bg-neutral-700 {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-neutral-700);
    }
  }
  .dark\:bg-neutral-800 {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-neutral-800);
    }
  }
  .dark\:bg-neutral-900 {
    @media (prefers-color-scheme: dark) {
      background-color: var(--color-neutral-900);
    }
  }
  .dark\:bg-neutral-900\/80 {
    @media (prefers-color-scheme: dark) {
      background-color: color-mix(in oklab, var(--color-neutral-900) 80%, transparent);
    }
  }
  .dark\:fill-neutral-200 {
    @media (prefers-color-scheme: dark) {
      fill: var(--color-neutral-200);
    }
  }
  .dark\:text-blue-500 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-blue-500);
    }
  }
  .dark\:text-neutral-200 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-neutral-200);
    }
  }
  .dark\:text-neutral-400 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-neutral-400);
    }
  }
  .dark\:text-neutral-500 {
    @media (prefers-color-scheme: dark) {
      color: var(--color-neutral-500);
    }
  }
  .dark\:text-white {
    @media (prefers-color-scheme: dark) {
      color: var(--color-white);
    }
  }
  .dark\:prose-invert {
    @media (prefers-color-scheme: dark) {
      --tw-prose-body: var(--tw-prose-invert-body);
      --tw-prose-headings: var(--tw-prose-invert-headings);
      --tw-prose-lead: var(--tw-prose-invert-lead);
      --tw-prose-links: var(--tw-prose-invert-links);
      --tw-prose-bold: var(--tw-prose-invert-bold);
      --tw-prose-counters: var(--tw-prose-invert-counters);
      --tw-prose-bullets: var(--tw-prose-invert-bullets);
      --tw-prose-hr: var(--tw-prose-invert-hr);
      --tw-prose-quotes: var(--tw-prose-invert-quotes);
      --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
      --tw-prose-captions: var(--tw-prose-invert-captions);
      --tw-prose-kbd: var(--tw-prose-invert-kbd);
      --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
      --tw-prose-code: var(--tw-prose-invert-code);
      --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
      --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
      --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
      --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
    }
  }
  .dark\:hover\:bg-neutral-800 {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-neutral-800);
        }
      }
    }
  }
  .dark\:hover\:text-neutral-200 {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-neutral-200);
        }
      }
    }
  }
  .dark\:hover\:text-neutral-300 {
    @media (prefers-color-scheme: dark) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-neutral-300);
        }
      }
    }
  }
  .dark\:focus\:bg-neutral-800 {
    @media (prefers-color-scheme: dark) {
      &:focus {
        background-color: var(--color-neutral-800);
      }
    }
  }
  .dark\:focus\:text-neutral-300 {
    @media (prefers-color-scheme: dark) {
      &:focus {
        color: var(--color-neutral-300);
      }
    }
  }
  .prose-headings\:text-ellipsis {
    & :is(:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      text-overflow: ellipsis;
    }
  }
  .prose-headings\:underline {
    & :is(:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      text-decoration-line: underline;
    }
  }
  .prose-h1\:text-center {
    & :is(:where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      text-align: center;
    }
  }
  .prose-h1\:text-3xl {
    & :is(:where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .prose-h2\:text-2xl {
    & :is(:where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .prose-h3\:text-xl {
    & :is(:where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .prose-h4\:text-lg {
    & :is(:where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .prose-h5\:text-sm {
    & :is(:where(h5):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .prose-h6\:text-xl {
    & :is(:where(h6):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .prose-p\:text-gray-700 {
    & :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-gray-700);
    }
  }
  .prose-a\:font-bold {
    & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-font-weight: var(--font-weight-bold);
      font-weight: var(--font-weight-bold);
    }
  }
  .prose-a\:text-blue-600 {
    & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-blue-600);
    }
  }
  .hover\:prose-a\:text-blue-500 {
    &:hover {
      @media (hover: hover) {
        & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
          color: var(--color-blue-500);
        }
      }
    }
  }
  .prose-blockquote\:italic {
    & :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-style: italic;
    }
  }
  .prose-figure\:mx-auto {
    & :is(:where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      margin-inline: auto;
    }
  }
  .prose-figcaption\:opacity-75 {
    & :is(:where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      opacity: 75%;
    }
  }
  .prose-strong\:font-medium {
    & :is(:where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
  }
  .prose-em\:italic {
    & :is(:where(em):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-style: italic;
    }
  }
  .prose-kbd\:border-b-2 {
    & :is(:where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 2px;
    }
  }
  .prose-code\:font-mono {
    & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-family: var(--font-mono);
    }
  }
  .prose-pre\:font-mono {
    & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-family: var(--font-mono);
    }
  }
  .prose-ol\:pl-6 {
    & :is(:where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      padding-left: calc(var(--spacing) * 6);
    }
  }
  .prose-ul\:pl-8 {
    & :is(:where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      padding-left: calc(var(--spacing) * 8);
    }
  }
  .prose-li\:my-4 {
    & :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      margin-block: calc(var(--spacing) * 4);
    }
  }
  .prose-table\:my-8 {
    & :is(:where(table):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      margin-block: calc(var(--spacing) * 8);
    }
  }
  .prose-thead\:border-red-300 {
    & :is(:where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-color: var(--color-red-300);
    }
  }
  .prose-tr\:border-red-200 {
    & :is(:where(tr):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-color: var(--color-red-200);
    }
  }
  .prose-th\:text-left {
    & :is(:where(th):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      text-align: left;
    }
  }
  .prose-img\:rounded-lg {
    & :is(:where(img):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-radius: var(--radius-lg);
    }
  }
  .prose-img\:rounded-xl {
    & :is(:where(img):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-radius: var(--radius-xl);
    }
  }
  .prose-video\:my-12 {
    & :is(:where(video):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      margin-block: calc(var(--spacing) * 12);
    }
  }
  .prose-hr\:border-t-2 {
    & :is(:where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-top-style: var(--tw-border-style);
      border-top-width: 2px;
    }
  }
  .prose-lead\:italic {
    & :is(:where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-style: italic;
    }
  }
  .hs-accordion-active\:block {
    &.hs-accordion.active {
      display: block;
    }
    .hs-accordion.active>& {
      display: block;
    }
    .hs-accordion.active>.hs-accordion-toggle & {
      display: block;
    }
    .hs-accordion.active>.hs-accordion-heading>.hs-accordion-toggle & {
      display: block;
    }
    &.hs-accordion-toggle {
      .hs-accordion.active>& {
        display: block;
      }
    }
    &.hs-accordion-toggle {
      .hs-accordion.active>.hs-accordion-heading>& {
        display: block;
      }
    }
    &.hs-accordion-force-active {
      .hs-accordion.active & {
        display: block;
      }
    }
  }
  .hs-accordion-active\:hidden {
    &.hs-accordion.active {
      display: none;
    }
    .hs-accordion.active>& {
      display: none;
    }
    .hs-accordion.active>.hs-accordion-toggle & {
      display: none;
    }
    .hs-accordion.active>.hs-accordion-heading>.hs-accordion-toggle & {
      display: none;
    }
    &.hs-accordion-toggle {
      .hs-accordion.active>& {
        display: none;
      }
    }
    &.hs-accordion-toggle {
      .hs-accordion.active>.hs-accordion-heading>& {
        display: none;
      }
    }
    &.hs-accordion-force-active {
      .hs-accordion.active & {
        display: none;
      }
    }
  }
  .hs-accordion-active\:bg-gray-100 {
    &.hs-accordion.active {
      background-color: var(--color-gray-100);
    }
    .hs-accordion.active>& {
      background-color: var(--color-gray-100);
    }
    .hs-accordion.active>.hs-accordion-toggle & {
      background-color: var(--color-gray-100);
    }
    .hs-accordion.active>.hs-accordion-heading>.hs-accordion-toggle & {
      background-color: var(--color-gray-100);
    }
    &.hs-accordion-toggle {
      .hs-accordion.active>& {
        background-color: var(--color-gray-100);
      }
    }
    &.hs-accordion-toggle {
      .hs-accordion.active>.hs-accordion-heading>& {
        background-color: var(--color-gray-100);
      }
    }
    &.hs-accordion-force-active {
      .hs-accordion.active & {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hs-accordion-active\:ring-1 {
    &.hs-accordion.active {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    .hs-accordion.active>& {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    .hs-accordion.active>.hs-accordion-toggle & {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    .hs-accordion.active>.hs-accordion-heading>.hs-accordion-toggle & {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    &.hs-accordion-toggle {
      .hs-accordion.active>& {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
    &.hs-accordion-toggle {
      .hs-accordion.active>.hs-accordion-heading>& {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
    &.hs-accordion-force-active {
      .hs-accordion.active & {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hs-collapse-open\:block {
    &.hs-collapse.open {
      display: block;
    }
    &.hs-collapse-toggle.open {
      display: block;
    }
    .hs-collapse.open & {
      display: block;
    }
    .hs-collapse-toggle.open & {
      display: block;
    }
  }
  .hs-collapse-open\:hidden {
    &.hs-collapse.open {
      display: none;
    }
    &.hs-collapse-toggle.open {
      display: none;
    }
    .hs-collapse.open & {
      display: none;
    }
    .hs-collapse-toggle.open & {
      display: none;
    }
  }
  .hs-carousel-active\:bg-white {
    &.active {
      background-color: var(--color-white);
    }
    .active & {
      background-color: var(--color-white);
    }
  }
  .hs-carousel-disabled\:cursor-default {
    &.disabled {
      cursor: default;
    }
    .disabled & {
      cursor: default;
    }
  }
  .hs-carousel-disabled\:opacity-50 {
    &.disabled {
      opacity: 50%;
    }
    .disabled & {
      opacity: 50%;
    }
  }
  .hs-selected\:block {
    &.selected {
      display: block;
    }
    .selected & {
      display: block;
    }
  }
  .hs-selected\:bg-gray-100 {
    &.selected {
      background-color: var(--color-gray-100);
    }
    .selected & {
      background-color: var(--color-gray-100);
    }
  }
  .dark\:hs-selected\:bg-gray-700 {
    @media (prefers-color-scheme: dark) {
      &.selected {
        background-color: var(--color-gray-700);
      }
      .selected & {
        background-color: var(--color-gray-700);
      }
    }
  }
  .dark\:hs-selected\:bg-neutral-800 {
    @media (prefers-color-scheme: dark) {
      &.selected {
        background-color: var(--color-neutral-800);
      }
      .selected & {
        background-color: var(--color-neutral-800);
      }
    }
  }
  .hs-select-disabled\:pointer-events-none {
    &.disabled {
      pointer-events: none;
    }
    .disabled & {
      pointer-events: none;
    }
  }
  .hs-select-disabled\:opacity-50 {
    &.disabled {
      opacity: 50%;
    }
    .disabled & {
      opacity: 50%;
    }
  }
  .hs-combo-box-selected\:block {
    &.selected {
      display: block;
    }
    .selected & {
      display: block;
    }
  }
  .hs-file-upload-complete\:bg-green-600 {
    &.complete {
      background-color: var(--color-green-600);
    }
    .complete & {
      background-color: var(--color-green-600);
    }
  }
  .intersect\:translate-y-0 {
    &:not([no-intersect]) {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .intersect\:animate-spin {
    &:not([no-intersect]) {
      animation: var(--animate-spin);
    }
  }
  .intersect\:bg-indigo-600 {
    &:not([no-intersect]) {
      background-color: var(--color-indigo-600);
    }
  }
  .intersect\:opacity-100 {
    &:not([no-intersect]) {
      opacity: 100%;
    }
  }
  .\[\&\:\:-webkit-scrollbar\]\:w-2 {
    &::-webkit-scrollbar {
      width: calc(var(--spacing) * 2);
    }
  }
  .\[\&\:\:-webkit-scrollbar-thumb\]\:rounded-full {
    &::-webkit-scrollbar-thumb {
      border-radius: calc(infinity * 1px);
    }
  }
  .\[\&\:\:-webkit-scrollbar-thumb\]\:bg-gray-300 {
    &::-webkit-scrollbar-thumb {
      background-color: var(--color-gray-300);
    }
  }
  .dark\:\[\&\:\:-webkit-scrollbar-thumb\]\:bg-neutral-500 {
    @media (prefers-color-scheme: dark) {
      &::-webkit-scrollbar-thumb {
        background-color: var(--color-neutral-500);
      }
    }
  }
  .\[\&\:\:-webkit-scrollbar-track\]\:bg-gray-100 {
    &::-webkit-scrollbar-track {
      background-color: var(--color-gray-100);
    }
  }
  .dark\:\[\&\:\:-webkit-scrollbar-track\]\:bg-neutral-700 {
    @media (prefers-color-scheme: dark) {
      &::-webkit-scrollbar-track {
        background-color: var(--color-neutral-700);
      }
    }
  }
}
@font-face {
  font-family: "Lora";
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
  src: url("static/fonts/Lora-VariableFont_wght.ttf") format("truetype");
}
@font-face {
  font-family: "Lora";
  font-weight: 100 900;
  font-style: italic;
  font-display: swap;
  src: url("static/fonts/Lora-Italic-VariableFont_wght.ttf") format("truetype");
}
@font-face {
  font-family: "Montserrat";
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
  src: url("static/fonts/Montserrat-VariableFont_wght.ttf") format("truetype");
}
@font-face {
  font-family: "Montserrat";
  font-weight: 100 900;
  font-style: italic;
  font-display: swap;
  src: url("static/fonts/Montserrat-Italic-VariableFont_wght.ttf") format("truetype");
}
@layer typography {
  .prose {
    font-family: var(--font-montserrat), sans-serif;
    color: var(--color-deep-navy);
  }
  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    font-family: var(--font-montserrat);
    color: var(--color-deep-navy);
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-pan-x {
  syntax: "*";
  inherits: false;
}
@property --tw-pan-y {
  syntax: "*";
  inherits: false;
}
@property --tw-pinch-zoom {
  syntax: "*";
  inherits: false;
}
@property --tw-scroll-snap-strictness {
  syntax: "*";
  inherits: false;
  initial-value: proximity;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-ordinal {
  syntax: "*";
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: "*";
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-size {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-layout {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-paint {
  syntax: "*";
  inherits: false;
}
@property --tw-contain-style {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}
